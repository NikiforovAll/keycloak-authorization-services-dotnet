### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  id: PolicyRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
  - Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
  langs:
  - csharp
  - vb
  name: PolicyRepresentation
  nameWithType: PolicyRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PolicyRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5001
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class PolicyRepresentation
    content.vb: Public Class PolicyRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
  id: Id
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PolicyRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Id
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5007
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Id As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
  id: Name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PolicyRepresentation.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5013
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
  id: Description
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: PolicyRepresentation.Description
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Description
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5019
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("description")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("description")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Description As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
  id: Type
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PolicyRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Type
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5025
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("type")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Type As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
  id: Policies
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Policies
  nameWithType: PolicyRepresentation.Policies
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Policies
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5031
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("policies")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? Policies { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("policies")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Policies As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: policies
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
  id: Resources
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: PolicyRepresentation.Resources
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Resources
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5037
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("resources")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? Resources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("resources")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Resources As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resources
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
  id: Scopes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: PolicyRepresentation.Scopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Scopes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5043
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("scopes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? Scopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("scopes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Scopes As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scopes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
  id: Logic
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Logic
  nameWithType: PolicyRepresentation.Logic
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Logic
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5049
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("logic")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public Logic? Logic { get; set; }
    parameters: []
    return:
      type: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.Logic}
    content.vb: >-
      <JsonPropertyName("logic")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property Logic As Logic?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logic
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
  id: DecisionStrategy
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: DecisionStrategy
  nameWithType: PolicyRepresentation.DecisionStrategy
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DecisionStrategy
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5058
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("decisionStrategy")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public DecisionStrategy? DecisionStrategy { get; set; }
    parameters: []
    return:
      type: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy}
    content.vb: >-
      <JsonPropertyName("decisionStrategy")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property DecisionStrategy As DecisionStrategy?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: decisionStrategy
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
  id: Owner
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: PolicyRepresentation.Owner
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Owner
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5067
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("owner")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Owner { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("owner")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Owner As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: owner
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
  id: ResourcesData
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: ResourcesData
  nameWithType: PolicyRepresentation.ResourcesData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ResourcesData
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5073
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("resourcesData")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ResourceRepresentation>? ResourcesData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation}
    content.vb: >-
      <JsonPropertyName("resourcesData")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ResourcesData As ICollection(Of ResourceRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resourcesData
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
  id: ScopesData
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: ScopesData
  nameWithType: PolicyRepresentation.ScopesData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ScopesData
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5080
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("scopesData")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ScopeRepresentation>? ScopesData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation}
    content.vb: >-
      <JsonPropertyName("scopesData")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ScopesData As ICollection(Of ScopeRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scopesData
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
  id: Config
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: PolicyRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Config
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5087
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("config")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? Config { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("config")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Config As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: config
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: PolicyRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5095
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Id
  name: Id
  nameWithType: PolicyRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Name
  name: Name
  nameWithType: PolicyRepresentation.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Description
  name: Description
  nameWithType: PolicyRepresentation.Description
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Description
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Type
  name: Type
  nameWithType: PolicyRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Type
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Policies
  name: Policies
  nameWithType: PolicyRepresentation.Policies
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Policies
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Resources
  name: Resources
  nameWithType: PolicyRepresentation.Resources
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Resources
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Scopes
  name: Scopes
  nameWithType: PolicyRepresentation.Scopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Scopes
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Logic
  name: Logic
  nameWithType: PolicyRepresentation.Logic
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Logic
- uid: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.Logic}
  commentId: T:System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.Logic}
  parent: System
  definition: System.Nullable`1
  href: Keycloak.AuthServices.Sdk.Admin.Models.Logic.html
  name: Logic?
  nameWithType: Logic?
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.Logic?
  spec.csharp:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.Logic
    name: Logic
    href: Keycloak.AuthServices.Sdk.Admin.Models.Logic.html
  - name: '?'
  spec.vb:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.Logic
    name: Logic
    href: Keycloak.AuthServices.Sdk.Admin.Models.Logic.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_DecisionStrategy
  name: DecisionStrategy
  nameWithType: PolicyRepresentation.DecisionStrategy
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.DecisionStrategy
- uid: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy}
  commentId: T:System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy}
  parent: System
  definition: System.Nullable`1
  href: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy.html
  name: DecisionStrategy?
  nameWithType: DecisionStrategy?
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy?
  spec.csharp:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy
    name: DecisionStrategy
    href: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy.html
  - name: '?'
  spec.vb:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy
    name: DecisionStrategy
    href: Keycloak.AuthServices.Sdk.Admin.Models.DecisionStrategy.html
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Owner
  name: Owner
  nameWithType: PolicyRepresentation.Owner
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Owner
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_ResourcesData
  name: ResourcesData
  nameWithType: PolicyRepresentation.ResourcesData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ResourcesData
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ResourceRepresentation>
  nameWithType: ICollection<ResourceRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation>
  nameWithType.vb: ICollection(Of ResourceRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation)
  name.vb: ICollection(Of ResourceRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation
    name: ResourceRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation
    name: ResourceRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ResourceRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_ScopesData
  name: ScopesData
  nameWithType: PolicyRepresentation.ScopesData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.ScopesData
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ScopeRepresentation>
  nameWithType: ICollection<ScopeRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation>
  nameWithType.vb: ICollection(Of ScopeRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation)
  name.vb: ICollection(Of ScopeRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation
    name: ScopeRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation
    name: ScopeRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_Config
  name: Config
  nameWithType: PolicyRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.Config
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_PolicyRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: PolicyRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
