### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  id: ClientTemplateRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
  langs:
  - csharp
  - vb
  name: ClientTemplateRepresentation
  nameWithType: ClientTemplateRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientTemplateRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2274
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [Obsolete]

      public class ClientTemplateRepresentation
    content.vb: >-
      <Obsolete>

      Public Class ClientTemplateRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
  id: Id
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ClientTemplateRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Id
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2281
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Id As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
  id: Name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ClientTemplateRepresentation.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2287
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
  id: Description
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ClientTemplateRepresentation.Description
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Description
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2293
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("description")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("description")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Description As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
  id: Protocol
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: ClientTemplateRepresentation.Protocol
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Protocol
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2299
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("protocol")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Protocol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("protocol")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Protocol As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: protocol
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
  id: FullScopeAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: FullScopeAllowed
  nameWithType: ClientTemplateRepresentation.FullScopeAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FullScopeAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2305
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("fullScopeAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? FullScopeAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("fullScopeAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FullScopeAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fullScopeAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
  id: BearerOnly
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: BearerOnly
  nameWithType: ClientTemplateRepresentation.BearerOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: BearerOnly
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2311
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("bearerOnly")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? BearerOnly { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("bearerOnly")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property BearerOnly As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bearerOnly
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
  id: ConsentRequired
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: ConsentRequired
  nameWithType: ClientTemplateRepresentation.ConsentRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ConsentRequired
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2317
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("consentRequired")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? ConsentRequired { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("consentRequired")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ConsentRequired As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: consentRequired
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
  id: StandardFlowEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: StandardFlowEnabled
  nameWithType: ClientTemplateRepresentation.StandardFlowEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: StandardFlowEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2323
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("standardFlowEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? StandardFlowEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("standardFlowEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property StandardFlowEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: standardFlowEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
  id: ImplicitFlowEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: ImplicitFlowEnabled
  nameWithType: ClientTemplateRepresentation.ImplicitFlowEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ImplicitFlowEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2329
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("implicitFlowEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? ImplicitFlowEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("implicitFlowEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ImplicitFlowEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: implicitFlowEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
  id: DirectAccessGrantsEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: DirectAccessGrantsEnabled
  nameWithType: ClientTemplateRepresentation.DirectAccessGrantsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DirectAccessGrantsEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2335
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("directAccessGrantsEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? DirectAccessGrantsEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("directAccessGrantsEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DirectAccessGrantsEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: directAccessGrantsEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
  id: ServiceAccountsEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: ServiceAccountsEnabled
  nameWithType: ClientTemplateRepresentation.ServiceAccountsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ServiceAccountsEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2341
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("serviceAccountsEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? ServiceAccountsEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("serviceAccountsEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ServiceAccountsEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: serviceAccountsEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
  id: PublicClient
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: PublicClient
  nameWithType: ClientTemplateRepresentation.PublicClient
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PublicClient
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2347
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("publicClient")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? PublicClient { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("publicClient")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PublicClient As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: publicClient
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
  id: FrontchannelLogout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: FrontchannelLogout
  nameWithType: ClientTemplateRepresentation.FrontchannelLogout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FrontchannelLogout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2353
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("frontchannelLogout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? FrontchannelLogout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("frontchannelLogout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FrontchannelLogout As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: frontchannelLogout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
  id: Attributes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ClientTemplateRepresentation.Attributes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Attributes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2359
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("attributes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? Attributes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("attributes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Attributes As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
  id: ProtocolMappers
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: ProtocolMappers
  nameWithType: ClientTemplateRepresentation.ProtocolMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ProtocolMappers
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2366
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("protocolMappers")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ProtocolMapperRepresentation>? ProtocolMappers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
    content.vb: >-
      <JsonPropertyName("protocolMappers")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ProtocolMappers As ICollection(Of ProtocolMapperRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: protocolMappers
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: ClientTemplateRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2375
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_Id
  name: Id
  nameWithType: ClientTemplateRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_Name
  name: Name
  nameWithType: ClientTemplateRepresentation.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_Description
  name: Description
  nameWithType: ClientTemplateRepresentation.Description
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Description
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_Protocol
  name: Protocol
  nameWithType: ClientTemplateRepresentation.Protocol
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Protocol
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_FullScopeAllowed
  name: FullScopeAllowed
  nameWithType: ClientTemplateRepresentation.FullScopeAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FullScopeAllowed
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_BearerOnly
  name: BearerOnly
  nameWithType: ClientTemplateRepresentation.BearerOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.BearerOnly
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_ConsentRequired
  name: ConsentRequired
  nameWithType: ClientTemplateRepresentation.ConsentRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ConsentRequired
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_StandardFlowEnabled
  name: StandardFlowEnabled
  nameWithType: ClientTemplateRepresentation.StandardFlowEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.StandardFlowEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_ImplicitFlowEnabled
  name: ImplicitFlowEnabled
  nameWithType: ClientTemplateRepresentation.ImplicitFlowEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ImplicitFlowEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_DirectAccessGrantsEnabled
  name: DirectAccessGrantsEnabled
  nameWithType: ClientTemplateRepresentation.DirectAccessGrantsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.DirectAccessGrantsEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_ServiceAccountsEnabled
  name: ServiceAccountsEnabled
  nameWithType: ClientTemplateRepresentation.ServiceAccountsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ServiceAccountsEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_PublicClient
  name: PublicClient
  nameWithType: ClientTemplateRepresentation.PublicClient
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.PublicClient
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_FrontchannelLogout
  name: FrontchannelLogout
  nameWithType: ClientTemplateRepresentation.FrontchannelLogout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.FrontchannelLogout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_Attributes
  name: Attributes
  nameWithType: ClientTemplateRepresentation.Attributes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.Attributes
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_ProtocolMappers
  name: ProtocolMappers
  nameWithType: ClientTemplateRepresentation.ProtocolMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.ProtocolMappers
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ProtocolMapperRepresentation>
  nameWithType: ICollection<ProtocolMapperRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation>
  nameWithType.vb: ICollection(Of ProtocolMapperRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation)
  name.vb: ICollection(Of ProtocolMapperRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation
    name: ProtocolMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation
    name: ProtocolMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_ClientTemplateRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: ClientTemplateRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
