### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  id: AddressClaimSet
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
  - Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
  langs:
  - csharp
  - vb
  name: AddressClaimSet
  nameWithType: AddressClaimSet
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AddressClaimSet
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 455
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class AddressClaimSet
    content.vb: Public Class AddressClaimSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
  id: Formatted
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Formatted
  nameWithType: AddressClaimSet.Formatted
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Formatted
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 461
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("formatted")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Formatted { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("formatted")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Formatted As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: formatted
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
  id: Street_address
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Street_address
  nameWithType: AddressClaimSet.Street_address
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Street_address
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 467
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("street_address")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Street_address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("street_address")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Street_address As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: street_address
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
  id: Locality
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Locality
  nameWithType: AddressClaimSet.Locality
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Locality
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 473
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("locality")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Locality { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("locality")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Locality As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: locality
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
  id: Region
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: AddressClaimSet.Region
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Region
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 479
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("region")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Region { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("region")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Region As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: region
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
  id: Postal_code
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Postal_code
  nameWithType: AddressClaimSet.Postal_code
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Postal_code
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 485
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("postal_code")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Postal_code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("postal_code")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Postal_code As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: postal_code
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
  id: Country
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: AddressClaimSet.Country
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Country
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 491
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("country")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("country")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Country As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: country
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: AddressClaimSet.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 499
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Formatted
  name: Formatted
  nameWithType: AddressClaimSet.Formatted
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Formatted
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Street_address
  name: Street_address
  nameWithType: AddressClaimSet.Street_address
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Street_address
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Locality
  name: Locality
  nameWithType: AddressClaimSet.Locality
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Locality
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Region
  name: Region
  nameWithType: AddressClaimSet.Region
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Region
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Postal_code
  name: Postal_code
  nameWithType: AddressClaimSet.Postal_code
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Postal_code
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_Country
  name: Country
  nameWithType: AddressClaimSet.Country
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.Country
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html#Keycloak_AuthServices_Sdk_Admin_Models_AddressClaimSet_AdditionalProperties
  name: AdditionalProperties
  nameWithType: AddressClaimSet.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
