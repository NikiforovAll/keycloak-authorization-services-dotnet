### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  id: KeyMetadataRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
  - Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
  langs:
  - csharp
  - vb
  name: KeyMetadataRepresentation
  nameWithType: KeyMetadataRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: KeyMetadataRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3818
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class KeyMetadataRepresentation
    content.vb: Public Class KeyMetadataRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
  id: ProviderId
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: ProviderId
  nameWithType: KeyMetadataRepresentation.ProviderId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ProviderId
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3824
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("providerId")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? ProviderId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("providerId")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ProviderId As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: providerId
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
  id: ProviderPriority
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: ProviderPriority
  nameWithType: KeyMetadataRepresentation.ProviderPriority
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ProviderPriority
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3830
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("providerPriority")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? ProviderPriority { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("providerPriority")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ProviderPriority As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: providerPriority
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
  id: Kid
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Kid
  nameWithType: KeyMetadataRepresentation.Kid
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Kid
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3836
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("kid")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Kid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("kid")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Kid As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kid
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
  id: Status
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: KeyMetadataRepresentation.Status
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Status
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3842
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("status")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("status")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Status As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
  id: Type
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: KeyMetadataRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Type
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3848
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("type")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Type As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
  id: Algorithm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: KeyMetadataRepresentation.Algorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Algorithm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3854
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("algorithm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Algorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("algorithm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Algorithm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: algorithm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
  id: PublicKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: KeyMetadataRepresentation.PublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PublicKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3860
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("publicKey")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? PublicKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("publicKey")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PublicKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: publicKey
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
  id: Certificate
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: KeyMetadataRepresentation.Certificate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Certificate
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3866
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("certificate")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Certificate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("certificate")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Certificate As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: certificate
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
  id: Use
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: Use
  nameWithType: KeyMetadataRepresentation.Use
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Use
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3872
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("use")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public KeyUse? Use { get; set; }
    parameters: []
    return:
      type: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.KeyUse}
    content.vb: >-
      <JsonPropertyName("use")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property Use As KeyUse?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
  id: ValidTo
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: ValidTo
  nameWithType: KeyMetadataRepresentation.ValidTo
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ValidTo
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3881
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("validTo")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? ValidTo { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("validTo")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ValidTo As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: validTo
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: KeyMetadataRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3889
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_ProviderId
  name: ProviderId
  nameWithType: KeyMetadataRepresentation.ProviderId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_ProviderPriority
  name: ProviderPriority
  nameWithType: KeyMetadataRepresentation.ProviderPriority
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ProviderPriority
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Kid
  name: Kid
  nameWithType: KeyMetadataRepresentation.Kid
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Kid
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Status
  name: Status
  nameWithType: KeyMetadataRepresentation.Status
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Status
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Type
  name: Type
  nameWithType: KeyMetadataRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Type
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Algorithm
  name: Algorithm
  nameWithType: KeyMetadataRepresentation.Algorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Algorithm
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_PublicKey
  name: PublicKey
  nameWithType: KeyMetadataRepresentation.PublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.PublicKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Certificate
  name: Certificate
  nameWithType: KeyMetadataRepresentation.Certificate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Certificate
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_Use
  name: Use
  nameWithType: KeyMetadataRepresentation.Use
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.Use
- uid: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.KeyUse}
  commentId: T:System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.KeyUse}
  parent: System
  definition: System.Nullable`1
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse.html
  name: KeyUse?
  nameWithType: KeyUse?
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse?
  spec.csharp:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse
    name: KeyUse
    href: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse.html
  - name: '?'
  spec.vb:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse
    name: KeyUse
    href: Keycloak.AuthServices.Sdk.Admin.Models.KeyUse.html
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_ValidTo
  name: ValidTo
  nameWithType: KeyMetadataRepresentation.ValidTo
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.ValidTo
- uid: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_KeyMetadataRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: KeyMetadataRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.KeyMetadataRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
