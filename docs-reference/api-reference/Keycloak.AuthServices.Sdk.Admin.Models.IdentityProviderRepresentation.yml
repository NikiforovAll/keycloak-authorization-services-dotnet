### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  id: IdentityProviderRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
  - Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  langs:
  - csharp
  - vb
  name: IdentityProviderRepresentation
  nameWithType: IdentityProviderRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: IdentityProviderRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3603
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class IdentityProviderRepresentation
    content.vb: Public Class IdentityProviderRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
  id: Alias
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: IdentityProviderRepresentation.Alias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Alias
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3609
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("alias")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Alias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("alias")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property [Alias] As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: alias
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
  id: DisplayName
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: IdentityProviderRepresentation.DisplayName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DisplayName
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3615
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("displayName")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("displayName")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DisplayName As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: displayName
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
  id: InternalId
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: InternalId
  nameWithType: IdentityProviderRepresentation.InternalId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: InternalId
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3621
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("internalId")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? InternalId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("internalId")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property InternalId As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: internalId
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
  id: ProviderId
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: ProviderId
  nameWithType: IdentityProviderRepresentation.ProviderId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ProviderId
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3627
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("providerId")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? ProviderId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("providerId")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ProviderId As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: providerId
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
  id: Enabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: IdentityProviderRepresentation.Enabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Enabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3633
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("enabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Enabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("enabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Enabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  id: UpdateProfileFirstLoginMode
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: UpdateProfileFirstLoginMode
  nameWithType: IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UpdateProfileFirstLoginMode
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3639
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("updateProfileFirstLoginMode")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? UpdateProfileFirstLoginMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("updateProfileFirstLoginMode")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property UpdateProfileFirstLoginMode As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updateProfileFirstLoginMode
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
  id: TrustEmail
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: TrustEmail
  nameWithType: IdentityProviderRepresentation.TrustEmail
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: TrustEmail
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3646
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("trustEmail")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? TrustEmail { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("trustEmail")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property TrustEmail As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: trustEmail
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
  id: StoreToken
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: StoreToken
  nameWithType: IdentityProviderRepresentation.StoreToken
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: StoreToken
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3652
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("storeToken")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? StoreToken { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("storeToken")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property StoreToken As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: storeToken
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  id: AddReadTokenRoleOnCreate
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: AddReadTokenRoleOnCreate
  nameWithType: IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AddReadTokenRoleOnCreate
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3658
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("addReadTokenRoleOnCreate")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? AddReadTokenRoleOnCreate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("addReadTokenRoleOnCreate")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AddReadTokenRoleOnCreate As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: addReadTokenRoleOnCreate
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
  id: AuthenticateByDefault
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: AuthenticateByDefault
  nameWithType: IdentityProviderRepresentation.AuthenticateByDefault
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AuthenticateByDefault
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3664
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("authenticateByDefault")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? AuthenticateByDefault { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("authenticateByDefault")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AuthenticateByDefault As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: authenticateByDefault
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
  id: LinkOnly
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: LinkOnly
  nameWithType: IdentityProviderRepresentation.LinkOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: LinkOnly
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3670
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("linkOnly")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? LinkOnly { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("linkOnly")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property LinkOnly As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: linkOnly
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  id: FirstBrokerLoginFlowAlias
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: FirstBrokerLoginFlowAlias
  nameWithType: IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FirstBrokerLoginFlowAlias
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3676
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("firstBrokerLoginFlowAlias")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? FirstBrokerLoginFlowAlias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("firstBrokerLoginFlowAlias")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FirstBrokerLoginFlowAlias As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: firstBrokerLoginFlowAlias
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  id: PostBrokerLoginFlowAlias
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: PostBrokerLoginFlowAlias
  nameWithType: IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PostBrokerLoginFlowAlias
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3682
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("postBrokerLoginFlowAlias")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? PostBrokerLoginFlowAlias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("postBrokerLoginFlowAlias")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PostBrokerLoginFlowAlias As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: postBrokerLoginFlowAlias
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
  id: Config
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: IdentityProviderRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Config
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3688
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("config")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? Config { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("config")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Config As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: config
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
  id: UpdateProfileFirstLogin
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: UpdateProfileFirstLogin
  nameWithType: IdentityProviderRepresentation.UpdateProfileFirstLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UpdateProfileFirstLogin
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3694
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("updateProfileFirstLogin")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? UpdateProfileFirstLogin { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("updateProfileFirstLogin")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property UpdateProfileFirstLogin As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updateProfileFirstLogin
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: IdentityProviderRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3703
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_Alias
  name: Alias
  nameWithType: IdentityProviderRepresentation.Alias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Alias
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_DisplayName
  name: DisplayName
  nameWithType: IdentityProviderRepresentation.DisplayName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.DisplayName
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_InternalId
  name: InternalId
  nameWithType: IdentityProviderRepresentation.InternalId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.InternalId
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_ProviderId
  name: ProviderId
  nameWithType: IdentityProviderRepresentation.ProviderId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.ProviderId
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_Enabled
  name: Enabled
  nameWithType: IdentityProviderRepresentation.Enabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Enabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_UpdateProfileFirstLoginMode
  name: UpdateProfileFirstLoginMode
  nameWithType: IdentityProviderRepresentation.UpdateProfileFirstLoginMode
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLoginMode
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_TrustEmail
  name: TrustEmail
  nameWithType: IdentityProviderRepresentation.TrustEmail
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.TrustEmail
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_StoreToken
  name: StoreToken
  nameWithType: IdentityProviderRepresentation.StoreToken
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.StoreToken
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_AddReadTokenRoleOnCreate
  name: AddReadTokenRoleOnCreate
  nameWithType: IdentityProviderRepresentation.AddReadTokenRoleOnCreate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AddReadTokenRoleOnCreate
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_AuthenticateByDefault
  name: AuthenticateByDefault
  nameWithType: IdentityProviderRepresentation.AuthenticateByDefault
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AuthenticateByDefault
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_LinkOnly
  name: LinkOnly
  nameWithType: IdentityProviderRepresentation.LinkOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.LinkOnly
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_FirstBrokerLoginFlowAlias
  name: FirstBrokerLoginFlowAlias
  nameWithType: IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.FirstBrokerLoginFlowAlias
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_PostBrokerLoginFlowAlias
  name: PostBrokerLoginFlowAlias
  nameWithType: IdentityProviderRepresentation.PostBrokerLoginFlowAlias
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.PostBrokerLoginFlowAlias
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_Config
  name: Config
  nameWithType: IdentityProviderRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.Config
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_UpdateProfileFirstLogin
  name: UpdateProfileFirstLogin
  nameWithType: IdentityProviderRepresentation.UpdateProfileFirstLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.UpdateProfileFirstLogin
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_IdentityProviderRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: IdentityProviderRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
