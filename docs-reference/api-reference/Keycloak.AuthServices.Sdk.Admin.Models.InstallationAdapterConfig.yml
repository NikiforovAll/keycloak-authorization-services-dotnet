### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  id: InstallationAdapterConfig
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
  - Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
  langs:
  - csharp
  - vb
  name: InstallationAdapterConfig
  nameWithType: InstallationAdapterConfig
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: InstallationAdapterConfig
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3720
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class InstallationAdapterConfig
    content.vb: Public Class InstallationAdapterConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
  id: Realm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: Realm
  nameWithType: InstallationAdapterConfig.Realm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Realm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3726
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("realm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Realm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("realm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Realm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: realm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
  id: RealmPublicKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: RealmPublicKey
  nameWithType: InstallationAdapterConfig.RealmPublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RealmPublicKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3732
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("realm-public-key")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? RealmPublicKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("realm-public-key")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RealmPublicKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: realm-public-key
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
  id: AuthServerUrl
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: AuthServerUrl
  nameWithType: InstallationAdapterConfig.AuthServerUrl
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AuthServerUrl
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3738
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("auth-server-url")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? AuthServerUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("auth-server-url")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AuthServerUrl As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: auth-server-url
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
  id: SslRequired
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: SslRequired
  nameWithType: InstallationAdapterConfig.SslRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SslRequired
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3744
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("ssl-required")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? SslRequired { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("ssl-required")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SslRequired As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ssl-required
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
  id: BearerOnly
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: BearerOnly
  nameWithType: InstallationAdapterConfig.BearerOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: BearerOnly
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3750
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("bearer-only")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? BearerOnly { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("bearer-only")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property BearerOnly As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bearer-only
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
  id: Resource
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: InstallationAdapterConfig.Resource
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Resource
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3756
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("resource")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Resource { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("resource")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Resource As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resource
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
  id: PublicClient
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: PublicClient
  nameWithType: InstallationAdapterConfig.PublicClient
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PublicClient
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3762
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("public-client")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? PublicClient { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("public-client")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PublicClient As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: public-client
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
  id: VerifyTokenAudience
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: VerifyTokenAudience
  nameWithType: InstallationAdapterConfig.VerifyTokenAudience
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: VerifyTokenAudience
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3768
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("verify-token-audience")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? VerifyTokenAudience { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("verify-token-audience")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property VerifyTokenAudience As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: verify-token-audience
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
  id: Credentials
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: InstallationAdapterConfig.Credentials
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Credentials
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3774
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("credentials")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, object>? Credentials { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonPropertyName("credentials")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Credentials As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: credentials
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
  id: UseResourceRoleMappings
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: UseResourceRoleMappings
  nameWithType: InstallationAdapterConfig.UseResourceRoleMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UseResourceRoleMappings
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3781
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("use-resource-role-mappings")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? UseResourceRoleMappings { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("use-resource-role-mappings")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property UseResourceRoleMappings As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use-resource-role-mappings
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
  id: ConfidentialPort
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: ConfidentialPort
  nameWithType: InstallationAdapterConfig.ConfidentialPort
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ConfidentialPort
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3787
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("confidential-port")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ConfidentialPort { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("confidential-port")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ConfidentialPort As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: confidential-port
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
  id: PolicyEnforcer
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: PolicyEnforcer
  nameWithType: InstallationAdapterConfig.PolicyEnforcer
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PolicyEnforcer
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3793
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("policy-enforcer")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public PolicyEnforcerConfig? PolicyEnforcer { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.PolicyEnforcerConfig
    content.vb: >-
      <JsonPropertyName("policy-enforcer")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PolicyEnforcer As PolicyEnforcerConfig
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: policy-enforcer
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: InstallationAdapterConfig.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3801
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_Realm
  name: Realm
  nameWithType: InstallationAdapterConfig.Realm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Realm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_RealmPublicKey
  name: RealmPublicKey
  nameWithType: InstallationAdapterConfig.RealmPublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.RealmPublicKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_AuthServerUrl
  name: AuthServerUrl
  nameWithType: InstallationAdapterConfig.AuthServerUrl
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AuthServerUrl
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_SslRequired
  name: SslRequired
  nameWithType: InstallationAdapterConfig.SslRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.SslRequired
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_BearerOnly
  name: BearerOnly
  nameWithType: InstallationAdapterConfig.BearerOnly
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.BearerOnly
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_Resource
  name: Resource
  nameWithType: InstallationAdapterConfig.Resource
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Resource
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_PublicClient
  name: PublicClient
  nameWithType: InstallationAdapterConfig.PublicClient
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PublicClient
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_VerifyTokenAudience
  name: VerifyTokenAudience
  nameWithType: InstallationAdapterConfig.VerifyTokenAudience
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.VerifyTokenAudience
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_Credentials
  name: Credentials
  nameWithType: InstallationAdapterConfig.Credentials
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.Credentials
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_UseResourceRoleMappings
  name: UseResourceRoleMappings
  nameWithType: InstallationAdapterConfig.UseResourceRoleMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.UseResourceRoleMappings
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_ConfidentialPort
  name: ConfidentialPort
  nameWithType: InstallationAdapterConfig.ConfidentialPort
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.ConfidentialPort
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_PolicyEnforcer
  name: PolicyEnforcer
  nameWithType: InstallationAdapterConfig.PolicyEnforcer
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.PolicyEnforcer
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PolicyEnforcerConfig
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.PolicyEnforcerConfig
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.PolicyEnforcerConfig.html
  name: PolicyEnforcerConfig
  nameWithType: PolicyEnforcerConfig
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PolicyEnforcerConfig
- uid: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_InstallationAdapterConfig_AdditionalProperties
  name: AdditionalProperties
  nameWithType: InstallationAdapterConfig.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.InstallationAdapterConfig.AdditionalProperties
