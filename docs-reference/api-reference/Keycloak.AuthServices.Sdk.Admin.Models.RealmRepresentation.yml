### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  id: RealmRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  - Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  langs:
  - csharp
  - vb
  name: RealmRepresentation
  nameWithType: RealmRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RealmRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5412
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class RealmRepresentation
    content.vb: Public Class RealmRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
  id: Id
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RealmRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Id
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5418
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Id As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
  id: Realm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Realm
  nameWithType: RealmRepresentation.Realm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Realm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5424
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("realm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Realm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("realm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Realm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: realm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
  id: DisplayName
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: RealmRepresentation.DisplayName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DisplayName
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5430
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("displayName")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("displayName")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DisplayName As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: displayName
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
  id: DisplayNameHtml
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DisplayNameHtml
  nameWithType: RealmRepresentation.DisplayNameHtml
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DisplayNameHtml
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5436
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("displayNameHtml")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DisplayNameHtml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("displayNameHtml")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DisplayNameHtml As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: displayNameHtml
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
  id: NotBefore
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: NotBefore
  nameWithType: RealmRepresentation.NotBefore
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: NotBefore
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5442
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("notBefore")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? NotBefore { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("notBefore")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property NotBefore As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: notBefore
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
  id: DefaultSignatureAlgorithm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultSignatureAlgorithm
  nameWithType: RealmRepresentation.DefaultSignatureAlgorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultSignatureAlgorithm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5448
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultSignatureAlgorithm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DefaultSignatureAlgorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("defaultSignatureAlgorithm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultSignatureAlgorithm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultSignatureAlgorithm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
  id: RevokeRefreshToken
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RevokeRefreshToken
  nameWithType: RealmRepresentation.RevokeRefreshToken
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RevokeRefreshToken
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5454
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("revokeRefreshToken")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? RevokeRefreshToken { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("revokeRefreshToken")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RevokeRefreshToken As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: revokeRefreshToken
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
  id: RefreshTokenMaxReuse
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RefreshTokenMaxReuse
  nameWithType: RealmRepresentation.RefreshTokenMaxReuse
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RefreshTokenMaxReuse
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5460
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("refreshTokenMaxReuse")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? RefreshTokenMaxReuse { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("refreshTokenMaxReuse")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RefreshTokenMaxReuse As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: refreshTokenMaxReuse
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
  id: AccessTokenLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccessTokenLifespan
  nameWithType: RealmRepresentation.AccessTokenLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccessTokenLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5466
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accessTokenLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? AccessTokenLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("accessTokenLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccessTokenLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accessTokenLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
  id: AccessTokenLifespanForImplicitFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccessTokenLifespanForImplicitFlow
  nameWithType: RealmRepresentation.AccessTokenLifespanForImplicitFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccessTokenLifespanForImplicitFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5472
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accessTokenLifespanForImplicitFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? AccessTokenLifespanForImplicitFlow { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("accessTokenLifespanForImplicitFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccessTokenLifespanForImplicitFlow As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accessTokenLifespanForImplicitFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
  id: SsoSessionIdleTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SsoSessionIdleTimeout
  nameWithType: RealmRepresentation.SsoSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SsoSessionIdleTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5478
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("ssoSessionIdleTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? SsoSessionIdleTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("ssoSessionIdleTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SsoSessionIdleTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ssoSessionIdleTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
  id: SsoSessionMaxLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SsoSessionMaxLifespan
  nameWithType: RealmRepresentation.SsoSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SsoSessionMaxLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5484
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("ssoSessionMaxLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? SsoSessionMaxLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("ssoSessionMaxLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SsoSessionMaxLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ssoSessionMaxLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  id: SsoSessionIdleTimeoutRememberMe
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SsoSessionIdleTimeoutRememberMe
  nameWithType: RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SsoSessionIdleTimeoutRememberMe
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5490
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("ssoSessionIdleTimeoutRememberMe")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? SsoSessionIdleTimeoutRememberMe { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("ssoSessionIdleTimeoutRememberMe")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SsoSessionIdleTimeoutRememberMe As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ssoSessionIdleTimeoutRememberMe
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
  id: SsoSessionMaxLifespanRememberMe
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SsoSessionMaxLifespanRememberMe
  nameWithType: RealmRepresentation.SsoSessionMaxLifespanRememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SsoSessionMaxLifespanRememberMe
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5496
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("ssoSessionMaxLifespanRememberMe")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? SsoSessionMaxLifespanRememberMe { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("ssoSessionMaxLifespanRememberMe")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SsoSessionMaxLifespanRememberMe As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ssoSessionMaxLifespanRememberMe
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
  id: OfflineSessionIdleTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OfflineSessionIdleTimeout
  nameWithType: RealmRepresentation.OfflineSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OfflineSessionIdleTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5502
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("offlineSessionIdleTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OfflineSessionIdleTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("offlineSessionIdleTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OfflineSessionIdleTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: offlineSessionIdleTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
  id: OfflineSessionMaxLifespanEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OfflineSessionMaxLifespanEnabled
  nameWithType: RealmRepresentation.OfflineSessionMaxLifespanEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OfflineSessionMaxLifespanEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5508
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("offlineSessionMaxLifespanEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? OfflineSessionMaxLifespanEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("offlineSessionMaxLifespanEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OfflineSessionMaxLifespanEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: offlineSessionMaxLifespanEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
  id: OfflineSessionMaxLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OfflineSessionMaxLifespan
  nameWithType: RealmRepresentation.OfflineSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OfflineSessionMaxLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5514
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("offlineSessionMaxLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OfflineSessionMaxLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("offlineSessionMaxLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OfflineSessionMaxLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: offlineSessionMaxLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
  id: ClientSessionIdleTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientSessionIdleTimeout
  nameWithType: RealmRepresentation.ClientSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientSessionIdleTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5520
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientSessionIdleTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ClientSessionIdleTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("clientSessionIdleTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientSessionIdleTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientSessionIdleTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
  id: ClientSessionMaxLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientSessionMaxLifespan
  nameWithType: RealmRepresentation.ClientSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientSessionMaxLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5526
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientSessionMaxLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ClientSessionMaxLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("clientSessionMaxLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientSessionMaxLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientSessionMaxLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
  id: ClientOfflineSessionIdleTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientOfflineSessionIdleTimeout
  nameWithType: RealmRepresentation.ClientOfflineSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientOfflineSessionIdleTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5532
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientOfflineSessionIdleTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ClientOfflineSessionIdleTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("clientOfflineSessionIdleTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientOfflineSessionIdleTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientOfflineSessionIdleTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
  id: ClientOfflineSessionMaxLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientOfflineSessionMaxLifespan
  nameWithType: RealmRepresentation.ClientOfflineSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientOfflineSessionMaxLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5538
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientOfflineSessionMaxLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ClientOfflineSessionMaxLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("clientOfflineSessionMaxLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientOfflineSessionMaxLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientOfflineSessionMaxLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
  id: AccessCodeLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccessCodeLifespan
  nameWithType: RealmRepresentation.AccessCodeLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccessCodeLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5544
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accessCodeLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? AccessCodeLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("accessCodeLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccessCodeLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accessCodeLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
  id: AccessCodeLifespanUserAction
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccessCodeLifespanUserAction
  nameWithType: RealmRepresentation.AccessCodeLifespanUserAction
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccessCodeLifespanUserAction
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5550
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accessCodeLifespanUserAction")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? AccessCodeLifespanUserAction { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("accessCodeLifespanUserAction")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccessCodeLifespanUserAction As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accessCodeLifespanUserAction
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
  id: AccessCodeLifespanLogin
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccessCodeLifespanLogin
  nameWithType: RealmRepresentation.AccessCodeLifespanLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccessCodeLifespanLogin
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5556
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accessCodeLifespanLogin")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? AccessCodeLifespanLogin { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("accessCodeLifespanLogin")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccessCodeLifespanLogin As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accessCodeLifespanLogin
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  id: ActionTokenGeneratedByAdminLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ActionTokenGeneratedByAdminLifespan
  nameWithType: RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ActionTokenGeneratedByAdminLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5562
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("actionTokenGeneratedByAdminLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ActionTokenGeneratedByAdminLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("actionTokenGeneratedByAdminLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ActionTokenGeneratedByAdminLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: actionTokenGeneratedByAdminLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
  id: ActionTokenGeneratedByUserLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ActionTokenGeneratedByUserLifespan
  nameWithType: RealmRepresentation.ActionTokenGeneratedByUserLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ActionTokenGeneratedByUserLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5568
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("actionTokenGeneratedByUserLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? ActionTokenGeneratedByUserLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("actionTokenGeneratedByUserLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ActionTokenGeneratedByUserLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: actionTokenGeneratedByUserLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
  id: Oauth2DeviceCodeLifespan
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Oauth2DeviceCodeLifespan
  nameWithType: RealmRepresentation.Oauth2DeviceCodeLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Oauth2DeviceCodeLifespan
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5574
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("oauth2DeviceCodeLifespan")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? Oauth2DeviceCodeLifespan { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("oauth2DeviceCodeLifespan")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Oauth2DeviceCodeLifespan As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: oauth2DeviceCodeLifespan
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
  id: Enabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: RealmRepresentation.Enabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Enabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5580
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("enabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Enabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("enabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Enabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
  id: SslRequired
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SslRequired
  nameWithType: RealmRepresentation.SslRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SslRequired
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5586
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("sslRequired")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? SslRequired { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("sslRequired")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SslRequired As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sslRequired
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
  id: PasswordCredentialGrantAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: PasswordCredentialGrantAllowed
  nameWithType: RealmRepresentation.PasswordCredentialGrantAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PasswordCredentialGrantAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5592
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("passwordCredentialGrantAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? PasswordCredentialGrantAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("passwordCredentialGrantAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property PasswordCredentialGrantAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: passwordCredentialGrantAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
  id: RegistrationAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RegistrationAllowed
  nameWithType: RealmRepresentation.RegistrationAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RegistrationAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5599
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("registrationAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? RegistrationAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("registrationAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RegistrationAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: registrationAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
  id: RegistrationEmailAsUsername
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RegistrationEmailAsUsername
  nameWithType: RealmRepresentation.RegistrationEmailAsUsername
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RegistrationEmailAsUsername
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5605
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("registrationEmailAsUsername")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? RegistrationEmailAsUsername { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("registrationEmailAsUsername")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RegistrationEmailAsUsername As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: registrationEmailAsUsername
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
  id: RememberMe
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RememberMe
  nameWithType: RealmRepresentation.RememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RememberMe
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5611
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("rememberMe")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? RememberMe { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("rememberMe")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RememberMe As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rememberMe
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
  id: VerifyEmail
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: VerifyEmail
  nameWithType: RealmRepresentation.VerifyEmail
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: VerifyEmail
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5617
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("verifyEmail")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? VerifyEmail { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("verifyEmail")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property VerifyEmail As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: verifyEmail
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
  id: LoginWithEmailAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: LoginWithEmailAllowed
  nameWithType: RealmRepresentation.LoginWithEmailAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: LoginWithEmailAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5623
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("loginWithEmailAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? LoginWithEmailAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("loginWithEmailAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property LoginWithEmailAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: loginWithEmailAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
  id: DuplicateEmailsAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DuplicateEmailsAllowed
  nameWithType: RealmRepresentation.DuplicateEmailsAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DuplicateEmailsAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5629
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("duplicateEmailsAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? DuplicateEmailsAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("duplicateEmailsAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DuplicateEmailsAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duplicateEmailsAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
  id: ResetPasswordAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ResetPasswordAllowed
  nameWithType: RealmRepresentation.ResetPasswordAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ResetPasswordAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5635
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("resetPasswordAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? ResetPasswordAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("resetPasswordAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ResetPasswordAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resetPasswordAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
  id: EditUsernameAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EditUsernameAllowed
  nameWithType: RealmRepresentation.EditUsernameAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EditUsernameAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5641
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("editUsernameAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? EditUsernameAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("editUsernameAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EditUsernameAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: editUsernameAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
  id: UserCacheEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: UserCacheEnabled
  nameWithType: RealmRepresentation.UserCacheEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UserCacheEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5647
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("userCacheEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? UserCacheEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("userCacheEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property UserCacheEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userCacheEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
  id: RealmCacheEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RealmCacheEnabled
  nameWithType: RealmRepresentation.RealmCacheEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RealmCacheEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5654
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("realmCacheEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? RealmCacheEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("realmCacheEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property RealmCacheEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: realmCacheEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
  id: BruteForceProtected
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: BruteForceProtected
  nameWithType: RealmRepresentation.BruteForceProtected
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: BruteForceProtected
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5661
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("bruteForceProtected")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? BruteForceProtected { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("bruteForceProtected")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property BruteForceProtected As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bruteForceProtected
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
  id: PermanentLockout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: PermanentLockout
  nameWithType: RealmRepresentation.PermanentLockout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PermanentLockout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5667
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("permanentLockout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? PermanentLockout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("permanentLockout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PermanentLockout As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: permanentLockout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
  id: MaxTemporaryLockouts
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: MaxTemporaryLockouts
  nameWithType: RealmRepresentation.MaxTemporaryLockouts
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: MaxTemporaryLockouts
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5673
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("maxTemporaryLockouts")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? MaxTemporaryLockouts { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("maxTemporaryLockouts")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property MaxTemporaryLockouts As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxTemporaryLockouts
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
  id: MaxFailureWaitSeconds
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: MaxFailureWaitSeconds
  nameWithType: RealmRepresentation.MaxFailureWaitSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: MaxFailureWaitSeconds
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5679
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("maxFailureWaitSeconds")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? MaxFailureWaitSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("maxFailureWaitSeconds")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property MaxFailureWaitSeconds As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxFailureWaitSeconds
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
  id: MinimumQuickLoginWaitSeconds
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: MinimumQuickLoginWaitSeconds
  nameWithType: RealmRepresentation.MinimumQuickLoginWaitSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: MinimumQuickLoginWaitSeconds
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5685
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("minimumQuickLoginWaitSeconds")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? MinimumQuickLoginWaitSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("minimumQuickLoginWaitSeconds")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property MinimumQuickLoginWaitSeconds As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: minimumQuickLoginWaitSeconds
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
  id: WaitIncrementSeconds
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WaitIncrementSeconds
  nameWithType: RealmRepresentation.WaitIncrementSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WaitIncrementSeconds
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5691
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("waitIncrementSeconds")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? WaitIncrementSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("waitIncrementSeconds")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WaitIncrementSeconds As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: waitIncrementSeconds
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
  id: QuickLoginCheckMilliSeconds
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: QuickLoginCheckMilliSeconds
  nameWithType: RealmRepresentation.QuickLoginCheckMilliSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: QuickLoginCheckMilliSeconds
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5697
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("quickLoginCheckMilliSeconds")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? QuickLoginCheckMilliSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("quickLoginCheckMilliSeconds")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property QuickLoginCheckMilliSeconds As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: quickLoginCheckMilliSeconds
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
  id: MaxDeltaTimeSeconds
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: MaxDeltaTimeSeconds
  nameWithType: RealmRepresentation.MaxDeltaTimeSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: MaxDeltaTimeSeconds
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5703
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("maxDeltaTimeSeconds")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? MaxDeltaTimeSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("maxDeltaTimeSeconds")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property MaxDeltaTimeSeconds As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxDeltaTimeSeconds
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
  id: FailureFactor
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: FailureFactor
  nameWithType: RealmRepresentation.FailureFactor
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FailureFactor
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5709
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("failureFactor")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? FailureFactor { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("failureFactor")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FailureFactor As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: failureFactor
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
  id: PrivateKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: RealmRepresentation.PrivateKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PrivateKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5715
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("privateKey")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? PrivateKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("privateKey")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property PrivateKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: privateKey
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
  id: PublicKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: RealmRepresentation.PublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PublicKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5722
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("publicKey")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? PublicKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("publicKey")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property PublicKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: publicKey
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
  id: Certificate
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: RealmRepresentation.Certificate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Certificate
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5729
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("certificate")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? Certificate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("certificate")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Certificate As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: certificate
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
  id: CodeSecret
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: CodeSecret
  nameWithType: RealmRepresentation.CodeSecret
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: CodeSecret
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5736
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("codeSecret")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? CodeSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("codeSecret")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property CodeSecret As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: codeSecret
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
  id: Roles
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: RealmRepresentation.Roles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Roles
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5743
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("roles")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public RolesRepresentation? Roles { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.RolesRepresentation
    content.vb: >-
      <JsonPropertyName("roles")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Roles As RolesRepresentation
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: roles
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
  id: Groups
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: RealmRepresentation.Groups
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Groups
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5749
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("groups")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<GroupRepresentation>? Groups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation}
    content.vb: >-
      <JsonPropertyName("groups")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Groups As ICollection(Of GroupRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: groups
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
  id: DefaultRoles
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultRoles
  nameWithType: RealmRepresentation.DefaultRoles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultRoles
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5756
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultRoles")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public ICollection<string>? DefaultRoles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("defaultRoles")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property DefaultRoles As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultRoles
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
  id: DefaultRole
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultRole
  nameWithType: RealmRepresentation.DefaultRole
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultRole
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5763
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultRole")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public RoleRepresentation? DefaultRole { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.RoleRepresentation
    content.vb: >-
      <JsonPropertyName("defaultRole")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultRole As RoleRepresentation
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultRole
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
  id: DefaultGroups
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultGroups
  nameWithType: RealmRepresentation.DefaultGroups
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultGroups
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5769
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultGroups")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? DefaultGroups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("defaultGroups")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultGroups As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultGroups
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
  id: RequiredCredentials
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RequiredCredentials
  nameWithType: RealmRepresentation.RequiredCredentials
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RequiredCredentials
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5775
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("requiredCredentials")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public ICollection<string>? RequiredCredentials { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("requiredCredentials")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property RequiredCredentials As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requiredCredentials
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
  id: PasswordPolicy
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: PasswordPolicy
  nameWithType: RealmRepresentation.PasswordPolicy
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PasswordPolicy
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5783
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("passwordPolicy")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? PasswordPolicy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("passwordPolicy")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property PasswordPolicy As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: passwordPolicy
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
  id: OtpPolicyType
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyType
  nameWithType: RealmRepresentation.OtpPolicyType
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyType
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5789
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyType")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? OtpPolicyType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("otpPolicyType")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyType As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyType
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
  id: OtpPolicyAlgorithm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyAlgorithm
  nameWithType: RealmRepresentation.OtpPolicyAlgorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyAlgorithm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5795
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyAlgorithm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? OtpPolicyAlgorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("otpPolicyAlgorithm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyAlgorithm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyAlgorithm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
  id: OtpPolicyInitialCounter
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyInitialCounter
  nameWithType: RealmRepresentation.OtpPolicyInitialCounter
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyInitialCounter
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5801
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyInitialCounter")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OtpPolicyInitialCounter { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("otpPolicyInitialCounter")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyInitialCounter As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyInitialCounter
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
  id: OtpPolicyDigits
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyDigits
  nameWithType: RealmRepresentation.OtpPolicyDigits
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyDigits
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5807
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyDigits")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OtpPolicyDigits { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("otpPolicyDigits")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyDigits As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyDigits
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
  id: OtpPolicyLookAheadWindow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyLookAheadWindow
  nameWithType: RealmRepresentation.OtpPolicyLookAheadWindow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyLookAheadWindow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5813
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyLookAheadWindow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OtpPolicyLookAheadWindow { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("otpPolicyLookAheadWindow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyLookAheadWindow As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyLookAheadWindow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
  id: OtpPolicyPeriod
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyPeriod
  nameWithType: RealmRepresentation.OtpPolicyPeriod
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyPeriod
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5819
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyPeriod")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OtpPolicyPeriod { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("otpPolicyPeriod")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyPeriod As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyPeriod
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
  id: OtpPolicyCodeReusable
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpPolicyCodeReusable
  nameWithType: RealmRepresentation.OtpPolicyCodeReusable
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpPolicyCodeReusable
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5825
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpPolicyCodeReusable")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? OtpPolicyCodeReusable { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("otpPolicyCodeReusable")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpPolicyCodeReusable As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpPolicyCodeReusable
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
  id: OtpSupportedApplications
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OtpSupportedApplications
  nameWithType: RealmRepresentation.OtpSupportedApplications
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtpSupportedApplications
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5831
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otpSupportedApplications")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? OtpSupportedApplications { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("otpSupportedApplications")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtpSupportedApplications As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otpSupportedApplications
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
  id: LocalizationTexts
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: LocalizationTexts
  nameWithType: RealmRepresentation.LocalizationTexts
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: LocalizationTexts
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5838
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("localizationTexts")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, IDictionary<string, string>>? LocalizationTexts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.String}}
    content.vb: >-
      <JsonPropertyName("localizationTexts")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property LocalizationTexts As IDictionary(Of String, IDictionary(Of String, String))
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: localizationTexts
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
  id: WebAuthnPolicyRpEntityName
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyRpEntityName
  nameWithType: RealmRepresentation.WebAuthnPolicyRpEntityName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyRpEntityName
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5847
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyRpEntityName")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyRpEntityName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyRpEntityName")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyRpEntityName As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyRpEntityName
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  id: WebAuthnPolicySignatureAlgorithms
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicySignatureAlgorithms
  nameWithType: RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicySignatureAlgorithms
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5853
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicySignatureAlgorithms")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicySignatureAlgorithms { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicySignatureAlgorithms")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicySignatureAlgorithms As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicySignatureAlgorithms
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
  id: WebAuthnPolicyRpId
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyRpId
  nameWithType: RealmRepresentation.WebAuthnPolicyRpId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyRpId
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5860
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyRpId")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyRpId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyRpId")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyRpId As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyRpId
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  id: WebAuthnPolicyAttestationConveyancePreference
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyAttestationConveyancePreference
  nameWithType: RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyAttestationConveyancePreference
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5866
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyAttestationConveyancePreference")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyAttestationConveyancePreference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyAttestationConveyancePreference")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyAttestationConveyancePreference As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyAttestationConveyancePreference
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  id: WebAuthnPolicyAuthenticatorAttachment
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyAuthenticatorAttachment
  nameWithType: RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyAuthenticatorAttachment
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5874
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyAuthenticatorAttachment")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyAuthenticatorAttachment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyAuthenticatorAttachment")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyAuthenticatorAttachment As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyAuthenticatorAttachment
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
  id: WebAuthnPolicyRequireResidentKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyRequireResidentKey
  nameWithType: RealmRepresentation.WebAuthnPolicyRequireResidentKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyRequireResidentKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5880
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyRequireResidentKey")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyRequireResidentKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyRequireResidentKey")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyRequireResidentKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyRequireResidentKey
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  id: WebAuthnPolicyUserVerificationRequirement
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyUserVerificationRequirement
  nameWithType: RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyUserVerificationRequirement
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5886
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyUserVerificationRequirement")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyUserVerificationRequirement { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyUserVerificationRequirement")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyUserVerificationRequirement As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyUserVerificationRequirement
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
  id: WebAuthnPolicyCreateTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyCreateTimeout
  nameWithType: RealmRepresentation.WebAuthnPolicyCreateTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyCreateTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5892
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyCreateTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? WebAuthnPolicyCreateTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyCreateTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyCreateTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyCreateTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  id: WebAuthnPolicyAvoidSameAuthenticatorRegister
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyAvoidSameAuthenticatorRegister
  nameWithType: RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyAvoidSameAuthenticatorRegister
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5898
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyAvoidSameAuthenticatorRegister")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? WebAuthnPolicyAvoidSameAuthenticatorRegister { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyAvoidSameAuthenticatorRegister")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyAvoidSameAuthenticatorRegister As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyAvoidSameAuthenticatorRegister
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  id: WebAuthnPolicyAcceptableAaguids
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyAcceptableAaguids
  nameWithType: RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyAcceptableAaguids
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5906
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyAcceptableAaguids")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicyAcceptableAaguids { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyAcceptableAaguids")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyAcceptableAaguids As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyAcceptableAaguids
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
  id: WebAuthnPolicyExtraOrigins
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyExtraOrigins
  nameWithType: RealmRepresentation.WebAuthnPolicyExtraOrigins
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyExtraOrigins
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5913
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyExtraOrigins")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicyExtraOrigins { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyExtraOrigins")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyExtraOrigins As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyExtraOrigins
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  id: WebAuthnPolicyPasswordlessRpEntityName
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessRpEntityName
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessRpEntityName
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5920
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessRpEntityName")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessRpEntityName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessRpEntityName")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessRpEntityName As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessRpEntityName
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  id: WebAuthnPolicyPasswordlessSignatureAlgorithms
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessSignatureAlgorithms
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessSignatureAlgorithms
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5926
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessSignatureAlgorithms")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicyPasswordlessSignatureAlgorithms { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessSignatureAlgorithms")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessSignatureAlgorithms As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessSignatureAlgorithms
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  id: WebAuthnPolicyPasswordlessRpId
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessRpId
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessRpId
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5935
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessRpId")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessRpId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessRpId")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessRpId As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessRpId
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  id: WebAuthnPolicyPasswordlessAttestationConveyancePreference
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessAttestationConveyancePreference
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessAttestationConveyancePreference
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5941
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessAttestationConveyancePreference")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessAttestationConveyancePreference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessAttestationConveyancePreference")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessAttestationConveyancePreference As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessAttestationConveyancePreference
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  id: WebAuthnPolicyPasswordlessAuthenticatorAttachment
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessAuthenticatorAttachment
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessAuthenticatorAttachment
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5950
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessAuthenticatorAttachment")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessAuthenticatorAttachment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessAuthenticatorAttachment")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessAuthenticatorAttachment As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessAuthenticatorAttachment
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  id: WebAuthnPolicyPasswordlessRequireResidentKey
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessRequireResidentKey
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessRequireResidentKey
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5958
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessRequireResidentKey")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessRequireResidentKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessRequireResidentKey")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessRequireResidentKey As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessRequireResidentKey
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  id: WebAuthnPolicyPasswordlessUserVerificationRequirement
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessUserVerificationRequirement
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessUserVerificationRequirement
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5966
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessUserVerificationRequirement")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? WebAuthnPolicyPasswordlessUserVerificationRequirement { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessUserVerificationRequirement")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessUserVerificationRequirement As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessUserVerificationRequirement
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  id: WebAuthnPolicyPasswordlessCreateTimeout
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessCreateTimeout
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessCreateTimeout
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5974
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessCreateTimeout")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? WebAuthnPolicyPasswordlessCreateTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessCreateTimeout")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessCreateTimeout As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessCreateTimeout
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  id: WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5980
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  id: WebAuthnPolicyPasswordlessAcceptableAaguids
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessAcceptableAaguids
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessAcceptableAaguids
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5988
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessAcceptableAaguids")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicyPasswordlessAcceptableAaguids { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessAcceptableAaguids")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessAcceptableAaguids As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessAcceptableAaguids
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  id: WebAuthnPolicyPasswordlessExtraOrigins
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: WebAuthnPolicyPasswordlessExtraOrigins
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: WebAuthnPolicyPasswordlessExtraOrigins
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 5995
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("webAuthnPolicyPasswordlessExtraOrigins")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? WebAuthnPolicyPasswordlessExtraOrigins { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("webAuthnPolicyPasswordlessExtraOrigins")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property WebAuthnPolicyPasswordlessExtraOrigins As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: webAuthnPolicyPasswordlessExtraOrigins
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
  id: ClientProfiles
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientProfiles
  nameWithType: RealmRepresentation.ClientProfiles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientProfiles
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6002
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientProfiles")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ClientProfilesRepresentation? ClientProfiles { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.ClientProfilesRepresentation
    content.vb: >-
      <JsonPropertyName("clientProfiles")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientProfiles As ClientProfilesRepresentation
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientProfiles
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
  id: ClientPolicies
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientPolicies
  nameWithType: RealmRepresentation.ClientPolicies
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientPolicies
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6008
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientPolicies")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ClientPoliciesRepresentation? ClientPolicies { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.ClientPoliciesRepresentation
    content.vb: >-
      <JsonPropertyName("clientPolicies")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientPolicies As ClientPoliciesRepresentation
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientPolicies
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
  id: Users
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: RealmRepresentation.Users
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Users
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6014
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("users")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<UserRepresentation>? Users { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation}
    content.vb: >-
      <JsonPropertyName("users")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Users As ICollection(Of UserRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: users
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
  id: FederatedUsers
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: FederatedUsers
  nameWithType: RealmRepresentation.FederatedUsers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FederatedUsers
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6021
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("federatedUsers")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<UserRepresentation>? FederatedUsers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation}
    content.vb: >-
      <JsonPropertyName("federatedUsers")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FederatedUsers As ICollection(Of UserRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: federatedUsers
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
  id: ScopeMappings
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ScopeMappings
  nameWithType: RealmRepresentation.ScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ScopeMappings
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6028
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("scopeMappings")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ScopeMappingRepresentation>? ScopeMappings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}
    content.vb: >-
      <JsonPropertyName("scopeMappings")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ScopeMappings As ICollection(Of ScopeMappingRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scopeMappings
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
  id: ClientScopeMappings
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientScopeMappings
  nameWithType: RealmRepresentation.ClientScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientScopeMappings
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6035
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientScopeMappings")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, ICollection<ScopeMappingRepresentation>>? ClientScopeMappings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}}
    content.vb: >-
      <JsonPropertyName("clientScopeMappings")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientScopeMappings As IDictionary(Of String, ICollection(Of ScopeMappingRepresentation))
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientScopeMappings
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
  id: Clients
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: RealmRepresentation.Clients
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Clients
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6044
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clients")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ClientRepresentation>? Clients { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation}
    content.vb: >-
      <JsonPropertyName("clients")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Clients As ICollection(Of ClientRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clients
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
  id: ClientScopes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientScopes
  nameWithType: RealmRepresentation.ClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientScopes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6051
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientScopes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ClientScopeRepresentation>? ClientScopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation}
    content.vb: >-
      <JsonPropertyName("clientScopes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientScopes As ICollection(Of ClientScopeRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientScopes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
  id: DefaultDefaultClientScopes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultDefaultClientScopes
  nameWithType: RealmRepresentation.DefaultDefaultClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultDefaultClientScopes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6058
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultDefaultClientScopes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? DefaultDefaultClientScopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("defaultDefaultClientScopes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultDefaultClientScopes As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultDefaultClientScopes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
  id: DefaultOptionalClientScopes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultOptionalClientScopes
  nameWithType: RealmRepresentation.DefaultOptionalClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultOptionalClientScopes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6065
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultOptionalClientScopes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? DefaultOptionalClientScopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("defaultOptionalClientScopes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultOptionalClientScopes As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultOptionalClientScopes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
  id: BrowserSecurityHeaders
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: BrowserSecurityHeaders
  nameWithType: RealmRepresentation.BrowserSecurityHeaders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: BrowserSecurityHeaders
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6072
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("browserSecurityHeaders")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? BrowserSecurityHeaders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("browserSecurityHeaders")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property BrowserSecurityHeaders As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: browserSecurityHeaders
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
  id: SmtpServer
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SmtpServer
  nameWithType: RealmRepresentation.SmtpServer
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SmtpServer
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6081
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("smtpServer")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? SmtpServer { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("smtpServer")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SmtpServer As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: smtpServer
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
  id: UserFederationProviders
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: UserFederationProviders
  nameWithType: RealmRepresentation.UserFederationProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UserFederationProviders
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6088
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("userFederationProviders")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<UserFederationProviderRepresentation>? UserFederationProviders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation}
    content.vb: >-
      <JsonPropertyName("userFederationProviders")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property UserFederationProviders As ICollection(Of UserFederationProviderRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userFederationProviders
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
  id: UserFederationMappers
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: UserFederationMappers
  nameWithType: RealmRepresentation.UserFederationMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UserFederationMappers
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6095
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("userFederationMappers")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<UserFederationMapperRepresentation>? UserFederationMappers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation}
    content.vb: >-
      <JsonPropertyName("userFederationMappers")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property UserFederationMappers As ICollection(Of UserFederationMapperRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userFederationMappers
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
  id: LoginTheme
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: LoginTheme
  nameWithType: RealmRepresentation.LoginTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: LoginTheme
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6102
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("loginTheme")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? LoginTheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("loginTheme")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property LoginTheme As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: loginTheme
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
  id: AccountTheme
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AccountTheme
  nameWithType: RealmRepresentation.AccountTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AccountTheme
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6108
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("accountTheme")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? AccountTheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("accountTheme")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AccountTheme As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accountTheme
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
  id: AdminTheme
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AdminTheme
  nameWithType: RealmRepresentation.AdminTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdminTheme
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6114
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("adminTheme")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? AdminTheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("adminTheme")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AdminTheme As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: adminTheme
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
  id: EmailTheme
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EmailTheme
  nameWithType: RealmRepresentation.EmailTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EmailTheme
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6120
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("emailTheme")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? EmailTheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("emailTheme")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EmailTheme As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: emailTheme
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
  id: EventsEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EventsEnabled
  nameWithType: RealmRepresentation.EventsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EventsEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6126
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("eventsEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? EventsEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("eventsEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EventsEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eventsEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
  id: EventsExpiration
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EventsExpiration
  nameWithType: RealmRepresentation.EventsExpiration
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EventsExpiration
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6132
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("eventsExpiration")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? EventsExpiration { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("eventsExpiration")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EventsExpiration As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eventsExpiration
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
  id: EventsListeners
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EventsListeners
  nameWithType: RealmRepresentation.EventsListeners
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EventsListeners
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6138
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("eventsListeners")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? EventsListeners { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("eventsListeners")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EventsListeners As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eventsListeners
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
  id: EnabledEventTypes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: EnabledEventTypes
  nameWithType: RealmRepresentation.EnabledEventTypes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EnabledEventTypes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6144
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("enabledEventTypes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? EnabledEventTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("enabledEventTypes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property EnabledEventTypes As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabledEventTypes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
  id: AdminEventsEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AdminEventsEnabled
  nameWithType: RealmRepresentation.AdminEventsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdminEventsEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6151
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("adminEventsEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? AdminEventsEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("adminEventsEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AdminEventsEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: adminEventsEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
  id: AdminEventsDetailsEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AdminEventsDetailsEnabled
  nameWithType: RealmRepresentation.AdminEventsDetailsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdminEventsDetailsEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6157
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("adminEventsDetailsEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? AdminEventsDetailsEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("adminEventsDetailsEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AdminEventsDetailsEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: adminEventsDetailsEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
  id: IdentityProviders
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: IdentityProviders
  nameWithType: RealmRepresentation.IdentityProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: IdentityProviders
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6163
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("identityProviders")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<IdentityProviderRepresentation>? IdentityProviders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation}
    content.vb: >-
      <JsonPropertyName("identityProviders")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property IdentityProviders As ICollection(Of IdentityProviderRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: identityProviders
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
  id: IdentityProviderMappers
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: IdentityProviderMappers
  nameWithType: RealmRepresentation.IdentityProviderMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: IdentityProviderMappers
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6170
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("identityProviderMappers")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<IdentityProviderMapperRepresentation>? IdentityProviderMappers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation}
    content.vb: >-
      <JsonPropertyName("identityProviderMappers")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property IdentityProviderMappers As ICollection(Of IdentityProviderMapperRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: identityProviderMappers
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
  id: ProtocolMappers
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ProtocolMappers
  nameWithType: RealmRepresentation.ProtocolMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ProtocolMappers
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6177
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("protocolMappers")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<ProtocolMapperRepresentation>? ProtocolMappers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
    content.vb: >-
      <JsonPropertyName("protocolMappers")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ProtocolMappers As ICollection(Of ProtocolMapperRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: protocolMappers
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
  id: Components
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: RealmRepresentation.Components
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Components
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6184
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("components")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public MultivaluedHashMapStringComponentExportRepresentation? Components { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.MultivaluedHashMapStringComponentExportRepresentation
    content.vb: >-
      <JsonPropertyName("components")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Components As MultivaluedHashMapStringComponentExportRepresentation
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: components
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
  id: InternationalizationEnabled
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: InternationalizationEnabled
  nameWithType: RealmRepresentation.InternationalizationEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: InternationalizationEnabled
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6191
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("internationalizationEnabled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? InternationalizationEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("internationalizationEnabled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property InternationalizationEnabled As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: internationalizationEnabled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
  id: SupportedLocales
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SupportedLocales
  nameWithType: RealmRepresentation.SupportedLocales
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SupportedLocales
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6197
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("supportedLocales")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? SupportedLocales { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("supportedLocales")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SupportedLocales As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: supportedLocales
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
  id: DefaultLocale
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DefaultLocale
  nameWithType: RealmRepresentation.DefaultLocale
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DefaultLocale
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6204
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("defaultLocale")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DefaultLocale { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("defaultLocale")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DefaultLocale As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultLocale
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
  id: AuthenticationFlows
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AuthenticationFlows
  nameWithType: RealmRepresentation.AuthenticationFlows
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AuthenticationFlows
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6210
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("authenticationFlows")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<AuthenticationFlowRepresentation>? AuthenticationFlows { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation}
    content.vb: >-
      <JsonPropertyName("authenticationFlows")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AuthenticationFlows As ICollection(Of AuthenticationFlowRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: authenticationFlows
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
  id: AuthenticatorConfig
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AuthenticatorConfig
  nameWithType: RealmRepresentation.AuthenticatorConfig
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AuthenticatorConfig
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6217
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("authenticatorConfig")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<AuthenticatorConfigRepresentation>? AuthenticatorConfig { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation}
    content.vb: >-
      <JsonPropertyName("authenticatorConfig")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property AuthenticatorConfig As ICollection(Of AuthenticatorConfigRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: authenticatorConfig
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
  id: RequiredActions
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RequiredActions
  nameWithType: RealmRepresentation.RequiredActions
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RequiredActions
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6224
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("requiredActions")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<RequiredActionProviderRepresentation>? RequiredActions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation}
    content.vb: >-
      <JsonPropertyName("requiredActions")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RequiredActions As ICollection(Of RequiredActionProviderRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requiredActions
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
  id: BrowserFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: BrowserFlow
  nameWithType: RealmRepresentation.BrowserFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: BrowserFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6231
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("browserFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? BrowserFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("browserFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property BrowserFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: browserFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
  id: RegistrationFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: RegistrationFlow
  nameWithType: RealmRepresentation.RegistrationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: RegistrationFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6237
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("registrationFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? RegistrationFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("registrationFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property RegistrationFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: registrationFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
  id: DirectGrantFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DirectGrantFlow
  nameWithType: RealmRepresentation.DirectGrantFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DirectGrantFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6243
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("directGrantFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DirectGrantFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("directGrantFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DirectGrantFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: directGrantFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
  id: ResetCredentialsFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ResetCredentialsFlow
  nameWithType: RealmRepresentation.ResetCredentialsFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ResetCredentialsFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6249
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("resetCredentialsFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? ResetCredentialsFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("resetCredentialsFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ResetCredentialsFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resetCredentialsFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
  id: ClientAuthenticationFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientAuthenticationFlow
  nameWithType: RealmRepresentation.ClientAuthenticationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientAuthenticationFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6255
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientAuthenticationFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? ClientAuthenticationFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("clientAuthenticationFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClientAuthenticationFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientAuthenticationFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
  id: DockerAuthenticationFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: DockerAuthenticationFlow
  nameWithType: RealmRepresentation.DockerAuthenticationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: DockerAuthenticationFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6261
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("dockerAuthenticationFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? DockerAuthenticationFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("dockerAuthenticationFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property DockerAuthenticationFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dockerAuthenticationFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
  id: FirstBrokerLoginFlow
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: FirstBrokerLoginFlow
  nameWithType: RealmRepresentation.FirstBrokerLoginFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: FirstBrokerLoginFlow
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6267
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("firstBrokerLoginFlow")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? FirstBrokerLoginFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("firstBrokerLoginFlow")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property FirstBrokerLoginFlow As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: firstBrokerLoginFlow
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
  id: Attributes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: RealmRepresentation.Attributes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Attributes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6273
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("attributes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, string>? Attributes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("attributes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Attributes As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
  id: KeycloakVersion
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: KeycloakVersion
  nameWithType: RealmRepresentation.KeycloakVersion
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: KeycloakVersion
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6280
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("keycloakVersion")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? KeycloakVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("keycloakVersion")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property KeycloakVersion As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: keycloakVersion
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
  id: UserManagedAccessAllowed
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: UserManagedAccessAllowed
  nameWithType: RealmRepresentation.UserManagedAccessAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UserManagedAccessAllowed
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6286
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("userManagedAccessAllowed")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? UserManagedAccessAllowed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("userManagedAccessAllowed")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property UserManagedAccessAllowed As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userManagedAccessAllowed
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
  id: Social
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Social
  nameWithType: RealmRepresentation.Social
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Social
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6292
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("social")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? Social { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("social")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Social As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: social
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
  id: UpdateProfileOnInitialSocialLogin
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: UpdateProfileOnInitialSocialLogin
  nameWithType: RealmRepresentation.UpdateProfileOnInitialSocialLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UpdateProfileOnInitialSocialLogin
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6299
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("updateProfileOnInitialSocialLogin")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public bool? UpdateProfileOnInitialSocialLogin { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("updateProfileOnInitialSocialLogin")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property UpdateProfileOnInitialSocialLogin As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updateProfileOnInitialSocialLogin
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
  id: SocialProviders
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: SocialProviders
  nameWithType: RealmRepresentation.SocialProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SocialProviders
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6306
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("socialProviders")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public IDictionary<string, string>? SocialProviders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonPropertyName("socialProviders")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property SocialProviders As IDictionary(Of String, String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: socialProviders
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
  id: ApplicationScopeMappings
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ApplicationScopeMappings
  nameWithType: RealmRepresentation.ApplicationScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ApplicationScopeMappings
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6314
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("applicationScopeMappings")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public IDictionary<string, ICollection<ScopeMappingRepresentation>>? ApplicationScopeMappings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}}
    content.vb: >-
      <JsonPropertyName("applicationScopeMappings")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property ApplicationScopeMappings As IDictionary(Of String, ICollection(Of ScopeMappingRepresentation))
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: applicationScopeMappings
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
  id: Applications
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: Applications
  nameWithType: RealmRepresentation.Applications
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Applications
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6324
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("applications")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public ICollection<ApplicationRepresentation>? Applications { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation}
    content.vb: >-
      <JsonPropertyName("applications")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Applications As ICollection(Of ApplicationRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: applications
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
  id: OauthClients
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OauthClients
  nameWithType: RealmRepresentation.OauthClients
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OauthClients
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6332
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("oauthClients")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public ICollection<OAuthClientRepresentation>? OauthClients { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation}
    content.vb: >-
      <JsonPropertyName("oauthClients")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property OauthClients As ICollection(Of OAuthClientRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: oauthClients
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
  id: ClientTemplates
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: ClientTemplates
  nameWithType: RealmRepresentation.ClientTemplates
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClientTemplates
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6340
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("clientTemplates")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public ICollection<ClientTemplateRepresentation>? ClientTemplates { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation}
    content.vb: >-
      <JsonPropertyName("clientTemplates")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property ClientTemplates As ICollection(Of ClientTemplateRepresentation)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clientTemplates
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
  id: OAuth2DevicePollingInterval
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: OAuth2DevicePollingInterval
  nameWithType: RealmRepresentation.OAuth2DevicePollingInterval
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OAuth2DevicePollingInterval
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6348
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("oAuth2DevicePollingInterval")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? OAuth2DevicePollingInterval { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("oAuth2DevicePollingInterval")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OAuth2DevicePollingInterval As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: oAuth2DevicePollingInterval
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: RealmRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 6356
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Id
  name: Id
  nameWithType: RealmRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Realm
  name: Realm
  nameWithType: RealmRepresentation.Realm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Realm
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DisplayName
  name: DisplayName
  nameWithType: RealmRepresentation.DisplayName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayName
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DisplayNameHtml
  name: DisplayNameHtml
  nameWithType: RealmRepresentation.DisplayNameHtml
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DisplayNameHtml
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_NotBefore
  name: NotBefore
  nameWithType: RealmRepresentation.NotBefore
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.NotBefore
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultSignatureAlgorithm
  name: DefaultSignatureAlgorithm
  nameWithType: RealmRepresentation.DefaultSignatureAlgorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultSignatureAlgorithm
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RevokeRefreshToken
  name: RevokeRefreshToken
  nameWithType: RealmRepresentation.RevokeRefreshToken
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RevokeRefreshToken
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RefreshTokenMaxReuse
  name: RefreshTokenMaxReuse
  nameWithType: RealmRepresentation.RefreshTokenMaxReuse
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RefreshTokenMaxReuse
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccessTokenLifespan
  name: AccessTokenLifespan
  nameWithType: RealmRepresentation.AccessTokenLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccessTokenLifespanForImplicitFlow
  name: AccessTokenLifespanForImplicitFlow
  nameWithType: RealmRepresentation.AccessTokenLifespanForImplicitFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessTokenLifespanForImplicitFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SsoSessionIdleTimeout
  name: SsoSessionIdleTimeout
  nameWithType: RealmRepresentation.SsoSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SsoSessionMaxLifespan
  name: SsoSessionMaxLifespan
  nameWithType: RealmRepresentation.SsoSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SsoSessionIdleTimeoutRememberMe
  name: SsoSessionIdleTimeoutRememberMe
  nameWithType: RealmRepresentation.SsoSessionIdleTimeoutRememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionIdleTimeoutRememberMe
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SsoSessionMaxLifespanRememberMe
  name: SsoSessionMaxLifespanRememberMe
  nameWithType: RealmRepresentation.SsoSessionMaxLifespanRememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SsoSessionMaxLifespanRememberMe
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OfflineSessionIdleTimeout
  name: OfflineSessionIdleTimeout
  nameWithType: RealmRepresentation.OfflineSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionIdleTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OfflineSessionMaxLifespanEnabled
  name: OfflineSessionMaxLifespanEnabled
  nameWithType: RealmRepresentation.OfflineSessionMaxLifespanEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespanEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OfflineSessionMaxLifespan
  name: OfflineSessionMaxLifespan
  nameWithType: RealmRepresentation.OfflineSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OfflineSessionMaxLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientSessionIdleTimeout
  name: ClientSessionIdleTimeout
  nameWithType: RealmRepresentation.ClientSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionIdleTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientSessionMaxLifespan
  name: ClientSessionMaxLifespan
  nameWithType: RealmRepresentation.ClientSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientSessionMaxLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientOfflineSessionIdleTimeout
  name: ClientOfflineSessionIdleTimeout
  nameWithType: RealmRepresentation.ClientOfflineSessionIdleTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionIdleTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientOfflineSessionMaxLifespan
  name: ClientOfflineSessionMaxLifespan
  nameWithType: RealmRepresentation.ClientOfflineSessionMaxLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientOfflineSessionMaxLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccessCodeLifespan
  name: AccessCodeLifespan
  nameWithType: RealmRepresentation.AccessCodeLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccessCodeLifespanUserAction
  name: AccessCodeLifespanUserAction
  nameWithType: RealmRepresentation.AccessCodeLifespanUserAction
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanUserAction
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccessCodeLifespanLogin
  name: AccessCodeLifespanLogin
  nameWithType: RealmRepresentation.AccessCodeLifespanLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccessCodeLifespanLogin
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ActionTokenGeneratedByAdminLifespan
  name: ActionTokenGeneratedByAdminLifespan
  nameWithType: RealmRepresentation.ActionTokenGeneratedByAdminLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByAdminLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ActionTokenGeneratedByUserLifespan
  name: ActionTokenGeneratedByUserLifespan
  nameWithType: RealmRepresentation.ActionTokenGeneratedByUserLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ActionTokenGeneratedByUserLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Oauth2DeviceCodeLifespan
  name: Oauth2DeviceCodeLifespan
  nameWithType: RealmRepresentation.Oauth2DeviceCodeLifespan
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Oauth2DeviceCodeLifespan
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Enabled
  name: Enabled
  nameWithType: RealmRepresentation.Enabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Enabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SslRequired
  name: SslRequired
  nameWithType: RealmRepresentation.SslRequired
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SslRequired
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_PasswordCredentialGrantAllowed
  name: PasswordCredentialGrantAllowed
  nameWithType: RealmRepresentation.PasswordCredentialGrantAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordCredentialGrantAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RegistrationAllowed
  name: RegistrationAllowed
  nameWithType: RealmRepresentation.RegistrationAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RegistrationEmailAsUsername
  name: RegistrationEmailAsUsername
  nameWithType: RealmRepresentation.RegistrationEmailAsUsername
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationEmailAsUsername
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RememberMe
  name: RememberMe
  nameWithType: RealmRepresentation.RememberMe
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RememberMe
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_VerifyEmail
  name: VerifyEmail
  nameWithType: RealmRepresentation.VerifyEmail
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.VerifyEmail
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_LoginWithEmailAllowed
  name: LoginWithEmailAllowed
  nameWithType: RealmRepresentation.LoginWithEmailAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginWithEmailAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DuplicateEmailsAllowed
  name: DuplicateEmailsAllowed
  nameWithType: RealmRepresentation.DuplicateEmailsAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DuplicateEmailsAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ResetPasswordAllowed
  name: ResetPasswordAllowed
  nameWithType: RealmRepresentation.ResetPasswordAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetPasswordAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EditUsernameAllowed
  name: EditUsernameAllowed
  nameWithType: RealmRepresentation.EditUsernameAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EditUsernameAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_UserCacheEnabled
  name: UserCacheEnabled
  nameWithType: RealmRepresentation.UserCacheEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserCacheEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RealmCacheEnabled
  name: RealmCacheEnabled
  nameWithType: RealmRepresentation.RealmCacheEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RealmCacheEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_BruteForceProtected
  name: BruteForceProtected
  nameWithType: RealmRepresentation.BruteForceProtected
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BruteForceProtected
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_PermanentLockout
  name: PermanentLockout
  nameWithType: RealmRepresentation.PermanentLockout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PermanentLockout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_MaxTemporaryLockouts
  name: MaxTemporaryLockouts
  nameWithType: RealmRepresentation.MaxTemporaryLockouts
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxTemporaryLockouts
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_MaxFailureWaitSeconds
  name: MaxFailureWaitSeconds
  nameWithType: RealmRepresentation.MaxFailureWaitSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxFailureWaitSeconds
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_MinimumQuickLoginWaitSeconds
  name: MinimumQuickLoginWaitSeconds
  nameWithType: RealmRepresentation.MinimumQuickLoginWaitSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MinimumQuickLoginWaitSeconds
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WaitIncrementSeconds
  name: WaitIncrementSeconds
  nameWithType: RealmRepresentation.WaitIncrementSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WaitIncrementSeconds
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_QuickLoginCheckMilliSeconds
  name: QuickLoginCheckMilliSeconds
  nameWithType: RealmRepresentation.QuickLoginCheckMilliSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.QuickLoginCheckMilliSeconds
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_MaxDeltaTimeSeconds
  name: MaxDeltaTimeSeconds
  nameWithType: RealmRepresentation.MaxDeltaTimeSeconds
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.MaxDeltaTimeSeconds
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_FailureFactor
  name: FailureFactor
  nameWithType: RealmRepresentation.FailureFactor
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FailureFactor
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_PrivateKey
  name: PrivateKey
  nameWithType: RealmRepresentation.PrivateKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PrivateKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_PublicKey
  name: PublicKey
  nameWithType: RealmRepresentation.PublicKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PublicKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Certificate
  name: Certificate
  nameWithType: RealmRepresentation.Certificate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Certificate
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_CodeSecret
  name: CodeSecret
  nameWithType: RealmRepresentation.CodeSecret
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.CodeSecret
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Roles
  name: Roles
  nameWithType: RealmRepresentation.Roles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Roles
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RolesRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.RolesRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.RolesRepresentation.html
  name: RolesRepresentation
  nameWithType: RolesRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RolesRepresentation
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Groups
  name: Groups
  nameWithType: RealmRepresentation.Groups
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Groups
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<GroupRepresentation>
  nameWithType: ICollection<GroupRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation>
  nameWithType.vb: ICollection(Of GroupRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation)
  name.vb: ICollection(Of GroupRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation
    name: GroupRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation
    name: GroupRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.GroupRepresentation.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultRoles
  name: DefaultRoles
  nameWithType: RealmRepresentation.DefaultRoles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRoles
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultRole
  name: DefaultRole
  nameWithType: RealmRepresentation.DefaultRole
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultRole
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RoleRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.RoleRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.RoleRepresentation.html
  name: RoleRepresentation
  nameWithType: RoleRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RoleRepresentation
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultGroups
  name: DefaultGroups
  nameWithType: RealmRepresentation.DefaultGroups
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultGroups
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RequiredCredentials
  name: RequiredCredentials
  nameWithType: RealmRepresentation.RequiredCredentials
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredCredentials
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_PasswordPolicy
  name: PasswordPolicy
  nameWithType: RealmRepresentation.PasswordPolicy
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.PasswordPolicy
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyType
  name: OtpPolicyType
  nameWithType: RealmRepresentation.OtpPolicyType
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyType
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyAlgorithm
  name: OtpPolicyAlgorithm
  nameWithType: RealmRepresentation.OtpPolicyAlgorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyAlgorithm
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyInitialCounter
  name: OtpPolicyInitialCounter
  nameWithType: RealmRepresentation.OtpPolicyInitialCounter
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyInitialCounter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyDigits
  name: OtpPolicyDigits
  nameWithType: RealmRepresentation.OtpPolicyDigits
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyDigits
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyLookAheadWindow
  name: OtpPolicyLookAheadWindow
  nameWithType: RealmRepresentation.OtpPolicyLookAheadWindow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyLookAheadWindow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyPeriod
  name: OtpPolicyPeriod
  nameWithType: RealmRepresentation.OtpPolicyPeriod
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyPeriod
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpPolicyCodeReusable
  name: OtpPolicyCodeReusable
  nameWithType: RealmRepresentation.OtpPolicyCodeReusable
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpPolicyCodeReusable
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OtpSupportedApplications
  name: OtpSupportedApplications
  nameWithType: RealmRepresentation.OtpSupportedApplications
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OtpSupportedApplications
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_LocalizationTexts
  name: LocalizationTexts
  nameWithType: RealmRepresentation.LocalizationTexts
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LocalizationTexts
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.String}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, IDictionary<string, string>>
  nameWithType: IDictionary<string, IDictionary<string, string>>
  fullName: System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, string>>
  nameWithType.vb: IDictionary(Of String, IDictionary(Of String, String))
  fullName.vb: System.Collections.Generic.IDictionary(Of String, System.Collections.Generic.IDictionary(Of String, String))
  name.vb: IDictionary(Of String, IDictionary(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyRpEntityName
  name: WebAuthnPolicyRpEntityName
  nameWithType: RealmRepresentation.WebAuthnPolicyRpEntityName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpEntityName
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicySignatureAlgorithms
  name: WebAuthnPolicySignatureAlgorithms
  nameWithType: RealmRepresentation.WebAuthnPolicySignatureAlgorithms
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicySignatureAlgorithms
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyRpId
  name: WebAuthnPolicyRpId
  nameWithType: RealmRepresentation.WebAuthnPolicyRpId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRpId
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyAttestationConveyancePreference
  name: WebAuthnPolicyAttestationConveyancePreference
  nameWithType: RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAttestationConveyancePreference
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyAuthenticatorAttachment
  name: WebAuthnPolicyAuthenticatorAttachment
  nameWithType: RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAuthenticatorAttachment
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyRequireResidentKey
  name: WebAuthnPolicyRequireResidentKey
  nameWithType: RealmRepresentation.WebAuthnPolicyRequireResidentKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyRequireResidentKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyUserVerificationRequirement
  name: WebAuthnPolicyUserVerificationRequirement
  nameWithType: RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyUserVerificationRequirement
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyCreateTimeout
  name: WebAuthnPolicyCreateTimeout
  nameWithType: RealmRepresentation.WebAuthnPolicyCreateTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyCreateTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyAvoidSameAuthenticatorRegister
  name: WebAuthnPolicyAvoidSameAuthenticatorRegister
  nameWithType: RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAvoidSameAuthenticatorRegister
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyAcceptableAaguids
  name: WebAuthnPolicyAcceptableAaguids
  nameWithType: RealmRepresentation.WebAuthnPolicyAcceptableAaguids
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyAcceptableAaguids
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyExtraOrigins
  name: WebAuthnPolicyExtraOrigins
  nameWithType: RealmRepresentation.WebAuthnPolicyExtraOrigins
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyExtraOrigins
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessRpEntityName
  name: WebAuthnPolicyPasswordlessRpEntityName
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpEntityName
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessSignatureAlgorithms
  name: WebAuthnPolicyPasswordlessSignatureAlgorithms
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessSignatureAlgorithms
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessRpId
  name: WebAuthnPolicyPasswordlessRpId
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRpId
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRpId
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessAttestationConveyancePreference
  name: WebAuthnPolicyPasswordlessAttestationConveyancePreference
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAttestationConveyancePreference
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessAuthenticatorAttachment
  name: WebAuthnPolicyPasswordlessAuthenticatorAttachment
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAuthenticatorAttachment
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessRequireResidentKey
  name: WebAuthnPolicyPasswordlessRequireResidentKey
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessRequireResidentKey
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessUserVerificationRequirement
  name: WebAuthnPolicyPasswordlessUserVerificationRequirement
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessUserVerificationRequirement
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessCreateTimeout
  name: WebAuthnPolicyPasswordlessCreateTimeout
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessCreateTimeout
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  name: WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessAcceptableAaguids
  name: WebAuthnPolicyPasswordlessAcceptableAaguids
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessAcceptableAaguids
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_WebAuthnPolicyPasswordlessExtraOrigins
  name: WebAuthnPolicyPasswordlessExtraOrigins
  nameWithType: RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.WebAuthnPolicyPasswordlessExtraOrigins
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientProfiles
  name: ClientProfiles
  nameWithType: RealmRepresentation.ClientProfiles
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientProfiles
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientProfilesRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.ClientProfilesRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientProfilesRepresentation.html
  name: ClientProfilesRepresentation
  nameWithType: ClientProfilesRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientProfilesRepresentation
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientPolicies
  name: ClientPolicies
  nameWithType: RealmRepresentation.ClientPolicies
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientPolicies
- uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientPoliciesRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.ClientPoliciesRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.ClientPoliciesRepresentation.html
  name: ClientPoliciesRepresentation
  nameWithType: ClientPoliciesRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.ClientPoliciesRepresentation
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Users
  name: Users
  nameWithType: RealmRepresentation.Users
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Users
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<UserRepresentation>
  nameWithType: ICollection<UserRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation>
  nameWithType.vb: ICollection(Of UserRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation)
  name.vb: ICollection(Of UserRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation
    name: UserRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation
    name: UserRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_FederatedUsers
  name: FederatedUsers
  nameWithType: RealmRepresentation.FederatedUsers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FederatedUsers
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ScopeMappings
  name: ScopeMappings
  nameWithType: RealmRepresentation.ScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ScopeMappings
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ScopeMappingRepresentation>
  nameWithType: ICollection<ScopeMappingRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation>
  nameWithType.vb: ICollection(Of ScopeMappingRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation)
  name.vb: ICollection(Of ScopeMappingRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation
    name: ScopeMappingRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation
    name: ScopeMappingRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientScopeMappings
  name: ClientScopeMappings
  nameWithType: RealmRepresentation.ClientScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopeMappings
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, ICollection<ScopeMappingRepresentation>>
  nameWithType: IDictionary<string, ICollection<ScopeMappingRepresentation>>
  fullName: System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation>>
  nameWithType.vb: IDictionary(Of String, ICollection(Of ScopeMappingRepresentation))
  fullName.vb: System.Collections.Generic.IDictionary(Of String, System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation))
  name.vb: IDictionary(Of String, ICollection(Of ScopeMappingRepresentation))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation
    name: ScopeMappingRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation
    name: ScopeMappingRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ScopeMappingRepresentation.html
  - name: )
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Clients
  name: Clients
  nameWithType: RealmRepresentation.Clients
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Clients
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ClientRepresentation>
  nameWithType: ICollection<ClientRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation>
  nameWithType.vb: ICollection(Of ClientRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation)
  name.vb: ICollection(Of ClientRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation
    name: ClientRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation
    name: ClientRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientScopes
  name: ClientScopes
  nameWithType: RealmRepresentation.ClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientScopes
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ClientScopeRepresentation>
  nameWithType: ICollection<ClientScopeRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation>
  nameWithType.vb: ICollection(Of ClientScopeRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation)
  name.vb: ICollection(Of ClientScopeRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation
    name: ClientScopeRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation
    name: ClientScopeRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientScopeRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultDefaultClientScopes
  name: DefaultDefaultClientScopes
  nameWithType: RealmRepresentation.DefaultDefaultClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultDefaultClientScopes
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultOptionalClientScopes
  name: DefaultOptionalClientScopes
  nameWithType: RealmRepresentation.DefaultOptionalClientScopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultOptionalClientScopes
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_BrowserSecurityHeaders
  name: BrowserSecurityHeaders
  nameWithType: RealmRepresentation.BrowserSecurityHeaders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserSecurityHeaders
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SmtpServer
  name: SmtpServer
  nameWithType: RealmRepresentation.SmtpServer
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SmtpServer
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_UserFederationProviders
  name: UserFederationProviders
  nameWithType: RealmRepresentation.UserFederationProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationProviders
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<UserFederationProviderRepresentation>
  nameWithType: ICollection<UserFederationProviderRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation>
  nameWithType.vb: ICollection(Of UserFederationProviderRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation)
  name.vb: ICollection(Of UserFederationProviderRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation
    name: UserFederationProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation
    name: UserFederationProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationProviderRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_UserFederationMappers
  name: UserFederationMappers
  nameWithType: RealmRepresentation.UserFederationMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserFederationMappers
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<UserFederationMapperRepresentation>
  nameWithType: ICollection<UserFederationMapperRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation>
  nameWithType.vb: ICollection(Of UserFederationMapperRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation)
  name.vb: ICollection(Of UserFederationMapperRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation
    name: UserFederationMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation
    name: UserFederationMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.UserFederationMapperRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_LoginTheme
  name: LoginTheme
  nameWithType: RealmRepresentation.LoginTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.LoginTheme
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AccountTheme
  name: AccountTheme
  nameWithType: RealmRepresentation.AccountTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AccountTheme
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AdminTheme
  name: AdminTheme
  nameWithType: RealmRepresentation.AdminTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminTheme
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EmailTheme
  name: EmailTheme
  nameWithType: RealmRepresentation.EmailTheme
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EmailTheme
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EventsEnabled
  name: EventsEnabled
  nameWithType: RealmRepresentation.EventsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EventsExpiration
  name: EventsExpiration
  nameWithType: RealmRepresentation.EventsExpiration
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsExpiration
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EventsListeners
  name: EventsListeners
  nameWithType: RealmRepresentation.EventsListeners
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EventsListeners
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_EnabledEventTypes
  name: EnabledEventTypes
  nameWithType: RealmRepresentation.EnabledEventTypes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.EnabledEventTypes
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AdminEventsEnabled
  name: AdminEventsEnabled
  nameWithType: RealmRepresentation.AdminEventsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AdminEventsDetailsEnabled
  name: AdminEventsDetailsEnabled
  nameWithType: RealmRepresentation.AdminEventsDetailsEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdminEventsDetailsEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_IdentityProviders
  name: IdentityProviders
  nameWithType: RealmRepresentation.IdentityProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviders
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IdentityProviderRepresentation>
  nameWithType: ICollection<IdentityProviderRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation>
  nameWithType.vb: ICollection(Of IdentityProviderRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation)
  name.vb: ICollection(Of IdentityProviderRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
    name: IdentityProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation
    name: IdentityProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_IdentityProviderMappers
  name: IdentityProviderMappers
  nameWithType: RealmRepresentation.IdentityProviderMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.IdentityProviderMappers
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IdentityProviderMapperRepresentation>
  nameWithType: ICollection<IdentityProviderMapperRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation>
  nameWithType.vb: ICollection(Of IdentityProviderMapperRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation)
  name.vb: ICollection(Of IdentityProviderMapperRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation
    name: IdentityProviderMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation
    name: IdentityProviderMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.IdentityProviderMapperRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ProtocolMappers
  name: ProtocolMappers
  nameWithType: RealmRepresentation.ProtocolMappers
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ProtocolMappers
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ProtocolMapperRepresentation>
  nameWithType: ICollection<ProtocolMapperRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation>
  nameWithType.vb: ICollection(Of ProtocolMapperRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation)
  name.vb: ICollection(Of ProtocolMapperRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation
    name: ProtocolMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation
    name: ProtocolMapperRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ProtocolMapperRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Components
  name: Components
  nameWithType: RealmRepresentation.Components
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Components
- uid: Keycloak.AuthServices.Sdk.Admin.Models.MultivaluedHashMapStringComponentExportRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.MultivaluedHashMapStringComponentExportRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.MultivaluedHashMapStringComponentExportRepresentation.html
  name: MultivaluedHashMapStringComponentExportRepresentation
  nameWithType: MultivaluedHashMapStringComponentExportRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.MultivaluedHashMapStringComponentExportRepresentation
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_InternationalizationEnabled
  name: InternationalizationEnabled
  nameWithType: RealmRepresentation.InternationalizationEnabled
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.InternationalizationEnabled
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SupportedLocales
  name: SupportedLocales
  nameWithType: RealmRepresentation.SupportedLocales
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SupportedLocales
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DefaultLocale
  name: DefaultLocale
  nameWithType: RealmRepresentation.DefaultLocale
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DefaultLocale
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AuthenticationFlows
  name: AuthenticationFlows
  nameWithType: RealmRepresentation.AuthenticationFlows
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticationFlows
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AuthenticationFlowRepresentation>
  nameWithType: ICollection<AuthenticationFlowRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation>
  nameWithType.vb: ICollection(Of AuthenticationFlowRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation)
  name.vb: ICollection(Of AuthenticationFlowRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation
    name: AuthenticationFlowRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation
    name: AuthenticationFlowRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticationFlowRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AuthenticatorConfig
  name: AuthenticatorConfig
  nameWithType: RealmRepresentation.AuthenticatorConfig
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AuthenticatorConfig
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AuthenticatorConfigRepresentation>
  nameWithType: ICollection<AuthenticatorConfigRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation>
  nameWithType.vb: ICollection(Of AuthenticatorConfigRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation)
  name.vb: ICollection(Of AuthenticatorConfigRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation
    name: AuthenticatorConfigRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation
    name: AuthenticatorConfigRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.AuthenticatorConfigRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RequiredActions
  name: RequiredActions
  nameWithType: RealmRepresentation.RequiredActions
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RequiredActions
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<RequiredActionProviderRepresentation>
  nameWithType: ICollection<RequiredActionProviderRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation>
  nameWithType.vb: ICollection(Of RequiredActionProviderRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation)
  name.vb: ICollection(Of RequiredActionProviderRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation
    name: RequiredActionProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation
    name: RequiredActionProviderRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.RequiredActionProviderRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_BrowserFlow
  name: BrowserFlow
  nameWithType: RealmRepresentation.BrowserFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.BrowserFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_RegistrationFlow
  name: RegistrationFlow
  nameWithType: RealmRepresentation.RegistrationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.RegistrationFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DirectGrantFlow
  name: DirectGrantFlow
  nameWithType: RealmRepresentation.DirectGrantFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DirectGrantFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ResetCredentialsFlow
  name: ResetCredentialsFlow
  nameWithType: RealmRepresentation.ResetCredentialsFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ResetCredentialsFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientAuthenticationFlow
  name: ClientAuthenticationFlow
  nameWithType: RealmRepresentation.ClientAuthenticationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientAuthenticationFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_DockerAuthenticationFlow
  name: DockerAuthenticationFlow
  nameWithType: RealmRepresentation.DockerAuthenticationFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.DockerAuthenticationFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_FirstBrokerLoginFlow
  name: FirstBrokerLoginFlow
  nameWithType: RealmRepresentation.FirstBrokerLoginFlow
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.FirstBrokerLoginFlow
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Attributes
  name: Attributes
  nameWithType: RealmRepresentation.Attributes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Attributes
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_KeycloakVersion
  name: KeycloakVersion
  nameWithType: RealmRepresentation.KeycloakVersion
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.KeycloakVersion
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_UserManagedAccessAllowed
  name: UserManagedAccessAllowed
  nameWithType: RealmRepresentation.UserManagedAccessAllowed
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UserManagedAccessAllowed
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Social
  name: Social
  nameWithType: RealmRepresentation.Social
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Social
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_UpdateProfileOnInitialSocialLogin
  name: UpdateProfileOnInitialSocialLogin
  nameWithType: RealmRepresentation.UpdateProfileOnInitialSocialLogin
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.UpdateProfileOnInitialSocialLogin
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_SocialProviders
  name: SocialProviders
  nameWithType: RealmRepresentation.SocialProviders
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.SocialProviders
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ApplicationScopeMappings
  name: ApplicationScopeMappings
  nameWithType: RealmRepresentation.ApplicationScopeMappings
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ApplicationScopeMappings
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_Applications
  name: Applications
  nameWithType: RealmRepresentation.Applications
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.Applications
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ApplicationRepresentation>
  nameWithType: ICollection<ApplicationRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation>
  nameWithType.vb: ICollection(Of ApplicationRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation)
  name.vb: ICollection(Of ApplicationRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation
    name: ApplicationRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation
    name: ApplicationRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ApplicationRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OauthClients
  name: OauthClients
  nameWithType: RealmRepresentation.OauthClients
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OauthClients
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<OAuthClientRepresentation>
  nameWithType: ICollection<OAuthClientRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation>
  nameWithType.vb: ICollection(Of OAuthClientRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation)
  name.vb: ICollection(Of OAuthClientRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation
    name: OAuthClientRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation
    name: OAuthClientRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.OAuthClientRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_ClientTemplates
  name: ClientTemplates
  nameWithType: RealmRepresentation.ClientTemplates
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.ClientTemplates
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ClientTemplateRepresentation>
  nameWithType: ICollection<ClientTemplateRepresentation>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation>
  nameWithType.vb: ICollection(Of ClientTemplateRepresentation)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation)
  name.vb: ICollection(Of ClientTemplateRepresentation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
    name: ClientTemplateRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation
    name: ClientTemplateRepresentation
    href: Keycloak.AuthServices.Sdk.Admin.Models.ClientTemplateRepresentation.html
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_OAuth2DevicePollingInterval
  name: OAuth2DevicePollingInterval
  nameWithType: RealmRepresentation.OAuth2DevicePollingInterval
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.OAuth2DevicePollingInterval
- uid: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_RealmRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: RealmRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.RealmRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
