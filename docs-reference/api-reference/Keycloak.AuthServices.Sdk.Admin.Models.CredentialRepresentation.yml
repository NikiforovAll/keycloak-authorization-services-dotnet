### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  id: CredentialRepresentation
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
  - Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
  langs:
  - csharp
  - vb
  name: CredentialRepresentation
  nameWithType: CredentialRepresentation
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: CredentialRepresentation
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2738
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class CredentialRepresentation
    content.vb: Public Class CredentialRepresentation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
  id: Id
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CredentialRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Id
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2744
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Id As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
  id: Type
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: CredentialRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Type
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2750
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("type")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Type As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
  id: UserLabel
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: UserLabel
  nameWithType: CredentialRepresentation.UserLabel
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: UserLabel
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2756
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("userLabel")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? UserLabel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("userLabel")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property UserLabel As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userLabel
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
  id: CreatedDate
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: CredentialRepresentation.CreatedDate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: CreatedDate
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2762
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("createdDate")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? CreatedDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("createdDate")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property CreatedDate As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdDate
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
  id: SecretData
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: SecretData
  nameWithType: CredentialRepresentation.SecretData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: SecretData
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2768
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("secretData")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? SecretData { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("secretData")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property SecretData As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: secretData
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
  id: CredentialData
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: CredentialData
  nameWithType: CredentialRepresentation.CredentialData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: CredentialData
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2774
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("credentialData")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? CredentialData { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("credentialData")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property CredentialData As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: credentialData
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
  id: Priority
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: CredentialRepresentation.Priority
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Priority
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2780
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("priority")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public int? Priority { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("priority")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Priority As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: priority
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
  id: Value
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CredentialRepresentation.Value
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Value
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2786
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("value")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("value")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Value As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
  id: Temporary
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Temporary
  nameWithType: CredentialRepresentation.Temporary
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Temporary
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2792
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("temporary")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Temporary { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("temporary")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Temporary As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: temporary
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
  id: Device
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Device
  nameWithType: CredentialRepresentation.Device
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Device
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2798
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("device")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? Device { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("device")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Device As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: device
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
  id: HashedSaltedValue
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: HashedSaltedValue
  nameWithType: CredentialRepresentation.HashedSaltedValue
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: HashedSaltedValue
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2805
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("hashedSaltedValue")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? HashedSaltedValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("hashedSaltedValue")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property HashedSaltedValue As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hashedSaltedValue
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
  id: Salt
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Salt
  nameWithType: CredentialRepresentation.Salt
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Salt
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2812
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("salt")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? Salt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("salt")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Salt As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: salt
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
  id: HashIterations
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: HashIterations
  nameWithType: CredentialRepresentation.HashIterations
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: HashIterations
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2819
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("hashIterations")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public int? HashIterations { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("hashIterations")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property HashIterations As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hashIterations
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
  id: Counter
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Counter
  nameWithType: CredentialRepresentation.Counter
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Counter
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2826
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("counter")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public int? Counter { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("counter")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Counter As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: counter
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
  id: Algorithm
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: CredentialRepresentation.Algorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Algorithm
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2833
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("algorithm")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public string? Algorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("algorithm")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Algorithm As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: algorithm
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
  id: Digits
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Digits
  nameWithType: CredentialRepresentation.Digits
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Digits
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2840
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("digits")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public int? Digits { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("digits")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Digits As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: digits
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
  id: Period
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: CredentialRepresentation.Period
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Period
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2847
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("period")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public int? Period { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("period")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Period As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: period
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
  id: Config
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: CredentialRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Config
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2854
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("config")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public Config? Config { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.Config
    content.vb: >-
      <JsonPropertyName("config")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property Config As Config
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: config
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: CredentialRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 2863
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Id
  name: Id
  nameWithType: CredentialRepresentation.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Type
  name: Type
  nameWithType: CredentialRepresentation.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Type
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_UserLabel
  name: UserLabel
  nameWithType: CredentialRepresentation.UserLabel
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.UserLabel
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_CreatedDate
  name: CreatedDate
  nameWithType: CredentialRepresentation.CreatedDate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CreatedDate
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_SecretData
  name: SecretData
  nameWithType: CredentialRepresentation.SecretData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.SecretData
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_CredentialData
  name: CredentialData
  nameWithType: CredentialRepresentation.CredentialData
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.CredentialData
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Priority
  name: Priority
  nameWithType: CredentialRepresentation.Priority
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Priority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Value
  name: Value
  nameWithType: CredentialRepresentation.Value
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Value
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Temporary
  name: Temporary
  nameWithType: CredentialRepresentation.Temporary
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Temporary
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Device
  name: Device
  nameWithType: CredentialRepresentation.Device
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Device
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_HashedSaltedValue
  name: HashedSaltedValue
  nameWithType: CredentialRepresentation.HashedSaltedValue
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashedSaltedValue
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Salt
  name: Salt
  nameWithType: CredentialRepresentation.Salt
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Salt
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_HashIterations
  name: HashIterations
  nameWithType: CredentialRepresentation.HashIterations
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.HashIterations
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Counter
  name: Counter
  nameWithType: CredentialRepresentation.Counter
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Counter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Algorithm
  name: Algorithm
  nameWithType: CredentialRepresentation.Algorithm
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Algorithm
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Digits
  name: Digits
  nameWithType: CredentialRepresentation.Digits
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Digits
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Period
  name: Period
  nameWithType: CredentialRepresentation.Period
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Period
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_Config
  name: Config
  nameWithType: CredentialRepresentation.Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.Config
- uid: Keycloak.AuthServices.Sdk.Admin.Models.Config
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.Config
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.Config.html
  name: Config
  nameWithType: Config
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.Config
- uid: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.html#Keycloak_AuthServices_Sdk_Admin_Models_CredentialRepresentation_AdditionalProperties
  name: AdditionalProperties
  nameWithType: CredentialRepresentation.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.CredentialRepresentation.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
