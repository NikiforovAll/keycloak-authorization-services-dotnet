### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  id: PathConfig
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
  - Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
  langs:
  - csharp
  - vb
  name: PathConfig
  nameWithType: PathConfig
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: PathConfig
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4534
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class PathConfig
    content.vb: Public Class PathConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
  id: Name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PathConfig.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4540
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
  id: Type
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PathConfig.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Type
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4546
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("type")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Type As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
  id: Path
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: PathConfig.Path
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Path
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4552
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("path")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("path")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Path As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: path
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
  id: Methods
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Methods
  nameWithType: PathConfig.Methods
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Methods
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4558
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("methods")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<MethodConfig>? Methods { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig}
    content.vb: >-
      <JsonPropertyName("methods")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Methods As ICollection(Of MethodConfig)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: methods
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
  id: Scopes
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: PathConfig.Scopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Scopes
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4564
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("scopes")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public ICollection<string>? Scopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonPropertyName("scopes")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Scopes As ICollection(Of String)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scopes
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
  id: Id
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PathConfig.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Id
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4570
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Id As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
  id: EnforcementMode
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: EnforcementMode
  nameWithType: PathConfig.EnforcementMode
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: EnforcementMode
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4576
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("enforcement-mode")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public EnforcementMode? EnforcementMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode}
    content.vb: >-
      <JsonPropertyName("enforcement-mode")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property EnforcementMode As EnforcementMode?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enforcement-mode
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
  id: ClaimInformationPoint
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: ClaimInformationPoint
  nameWithType: PathConfig.ClaimInformationPoint
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: ClaimInformationPoint
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4585
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("claim-information-point")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, IDictionary<string, object>>? ClaimInformationPoint { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}}
    content.vb: >-
      <JsonPropertyName("claim-information-point")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property ClaimInformationPoint As IDictionary(Of String, IDictionary(Of String, Object))
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: claim-information-point
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
  id: Invalidated
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Invalidated
  nameWithType: PathConfig.Invalidated
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Invalidated
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4594
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("invalidated")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Invalidated { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("invalidated")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Invalidated As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: invalidated
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
  id: StaticPath
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: StaticPath
  nameWithType: PathConfig.StaticPath
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: StaticPath
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4600
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("staticPath")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? StaticPath { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("staticPath")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property StaticPath As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: staticPath
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
  id: Static
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: Static
  nameWithType: PathConfig.Static
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Static
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4606
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("static")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Static { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("static")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property [Static] As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: static
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: PathConfig.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 4614
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Name
  name: Name
  nameWithType: PathConfig.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Type
  name: Type
  nameWithType: PathConfig.Type
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Type
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Path
  name: Path
  nameWithType: PathConfig.Path
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Path
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Methods
  name: Methods
  nameWithType: PathConfig.Methods
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Methods
- uid: System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig}
  commentId: T:System.Collections.Generic.ICollection{Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<MethodConfig>
  nameWithType: ICollection<MethodConfig>
  fullName: System.Collections.Generic.ICollection<Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig>
  nameWithType.vb: ICollection(Of MethodConfig)
  fullName.vb: System.Collections.Generic.ICollection(Of Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig)
  name.vb: ICollection(Of MethodConfig)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig
    name: MethodConfig
    href: Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig
    name: MethodConfig
    href: Keycloak.AuthServices.Sdk.Admin.Models.MethodConfig.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Scopes
  name: Scopes
  nameWithType: PathConfig.Scopes
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Scopes
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Id
  name: Id
  nameWithType: PathConfig.Id
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Id
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_EnforcementMode
  name: EnforcementMode
  nameWithType: PathConfig.EnforcementMode
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.EnforcementMode
- uid: System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode}
  commentId: T:System.Nullable{Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode}
  parent: System
  definition: System.Nullable`1
  href: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode.html
  name: EnforcementMode?
  nameWithType: EnforcementMode?
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode?
  spec.csharp:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode
    name: EnforcementMode
    href: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode.html
  - name: '?'
  spec.vb:
  - uid: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode
    name: EnforcementMode
    href: Keycloak.AuthServices.Sdk.Admin.Models.EnforcementMode.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_ClaimInformationPoint
  name: ClaimInformationPoint
  nameWithType: PathConfig.ClaimInformationPoint
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.ClaimInformationPoint
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, IDictionary<string, object>>
  nameWithType: IDictionary<string, IDictionary<string, object>>
  fullName: System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, object>>
  nameWithType.vb: IDictionary(Of String, IDictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.IDictionary(Of String, System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: IDictionary(Of String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Invalidated
  name: Invalidated
  nameWithType: PathConfig.Invalidated
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Invalidated
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_StaticPath
  name: StaticPath
  nameWithType: PathConfig.StaticPath
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.StaticPath
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_Static
  name: Static
  nameWithType: PathConfig.Static
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.Static
- uid: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.html#Keycloak_AuthServices_Sdk_Admin_Models_PathConfig_AdditionalProperties
  name: AdditionalProperties
  nameWithType: PathConfig.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.PathConfig.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
