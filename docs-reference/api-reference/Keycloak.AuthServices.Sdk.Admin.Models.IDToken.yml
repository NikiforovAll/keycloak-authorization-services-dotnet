### YamlMime:ManagedReference
items:
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  id: IDToken
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  children:
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
  - Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
  langs:
  - csharp
  - vb
  name: IDToken
  nameWithType: IDToken
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  type: Class
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: IDToken
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3237
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: public class IDToken
    content.vb: Public Class IDToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
  id: Jti
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Jti
  nameWithType: IDToken.Jti
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Jti
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3243
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("jti")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Jti { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("jti")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Jti As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jti
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
  id: Exp
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Exp
  nameWithType: IDToken.Exp
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Exp
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3249
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("exp")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? Exp { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("exp")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Exp As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: exp
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
  id: Nbf
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Nbf
  nameWithType: IDToken.Nbf
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Nbf
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3255
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("nbf")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? Nbf { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("nbf")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Nbf As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nbf
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
  id: Iat
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Iat
  nameWithType: IDToken.Iat
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Iat
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3261
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("iat")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? Iat { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("iat")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Iat As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: iat
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
  id: Iss
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Iss
  nameWithType: IDToken.Iss
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Iss
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3267
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("iss")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Iss { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("iss")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Iss As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: iss
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
  id: Sub
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Sub
  nameWithType: IDToken.Sub
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Sub
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3273
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("sub")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Sub { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("sub")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property [Sub] As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sub
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
  id: Typ
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Typ
  nameWithType: IDToken.Typ
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Typ
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3279
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("typ")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Typ { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("typ")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Typ As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: typ
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
  id: Azp
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Azp
  nameWithType: IDToken.Azp
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Azp
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3285
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("azp")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Azp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("azp")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Azp As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: azp
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
  id: OtherClaims
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: OtherClaims
  nameWithType: IDToken.OtherClaims
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: OtherClaims
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3291
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("otherClaims")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public IDictionary<string, object>? OtherClaims { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonPropertyName("otherClaims")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property OtherClaims As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: otherClaims
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
  id: Nonce
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Nonce
  nameWithType: IDToken.Nonce
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Nonce
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3298
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("nonce")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Nonce { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("nonce")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Nonce As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nonce
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
  id: Auth_time
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Auth_time
  nameWithType: IDToken.Auth_time
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Auth_time
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3304
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("auth_time")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? Auth_time { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("auth_time")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Auth_time As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: auth_time
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
  id: Session_state
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Session_state
  nameWithType: IDToken.Session_state
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Session_state
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3310
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("session_state")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Session_state { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("session_state")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Session_state As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: session_state
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
  id: At_hash
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: At_hash
  nameWithType: IDToken.At_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: At_hash
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3316
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("at_hash")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? At_hash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("at_hash")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property At_hash As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: at_hash
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
  id: C_hash
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: C_hash
  nameWithType: IDToken.C_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: C_hash
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3322
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("c_hash")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? C_hash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("c_hash")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property C_hash As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c_hash
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
  id: Name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IDToken.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3328
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
  id: Given_name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Given_name
  nameWithType: IDToken.Given_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Given_name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3334
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("given_name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Given_name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("given_name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Given_name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: given_name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
  id: Family_name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Family_name
  nameWithType: IDToken.Family_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Family_name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3340
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("family_name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Family_name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("family_name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Family_name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: family_name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
  id: Middle_name
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Middle_name
  nameWithType: IDToken.Middle_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Middle_name
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3346
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("middle_name")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Middle_name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("middle_name")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Middle_name As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: middle_name
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
  id: Nickname
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Nickname
  nameWithType: IDToken.Nickname
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Nickname
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3352
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("nickname")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Nickname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("nickname")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Nickname As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nickname
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
  id: Preferred_username
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Preferred_username
  nameWithType: IDToken.Preferred_username
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Preferred_username
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3358
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("preferred_username")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Preferred_username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("preferred_username")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Preferred_username As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: preferred_username
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
  id: Profile
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: IDToken.Profile
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Profile
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3364
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("profile")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Profile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("profile")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Profile As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: profile
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
  id: Picture
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Picture
  nameWithType: IDToken.Picture
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Picture
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3370
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("picture")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Picture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("picture")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Picture As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: picture
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
  id: Website
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Website
  nameWithType: IDToken.Website
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Website
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3376
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("website")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Website { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("website")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Website As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: website
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
  id: Email
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: IDToken.Email
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Email
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3382
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("email")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("email")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Email As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
  id: Email_verified
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Email_verified
  nameWithType: IDToken.Email_verified
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Email_verified
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3388
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("email_verified")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Email_verified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("email_verified")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Email_verified As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email_verified
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
  id: Gender
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Gender
  nameWithType: IDToken.Gender
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Gender
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3394
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("gender")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Gender { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("gender")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Gender As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: gender
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
  id: Birthdate
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Birthdate
  nameWithType: IDToken.Birthdate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Birthdate
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3400
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("birthdate")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Birthdate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("birthdate")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Birthdate As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: birthdate
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
  id: Zoneinfo
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Zoneinfo
  nameWithType: IDToken.Zoneinfo
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Zoneinfo
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3406
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("zoneinfo")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Zoneinfo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("zoneinfo")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Zoneinfo As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: zoneinfo
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
  id: Locale
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Locale
  nameWithType: IDToken.Locale
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Locale
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3412
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("locale")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Locale { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("locale")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Locale As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: locale
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
  id: Phone_number
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Phone_number
  nameWithType: IDToken.Phone_number
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Phone_number
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3418
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("phone_number")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Phone_number { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("phone_number")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Phone_number As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: phone_number
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
  id: Phone_number_verified
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Phone_number_verified
  nameWithType: IDToken.Phone_number_verified
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Phone_number_verified
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3424
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("phone_number_verified")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? Phone_number_verified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("phone_number_verified")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Phone_number_verified As Boolean?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: phone_number_verified
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
  id: Address
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: IDToken.Address
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Address
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3430
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("address")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public AddressClaimSet? Address { get; set; }
    parameters: []
    return:
      type: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
    content.vb: >-
      <JsonPropertyName("address")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Address As AddressClaimSet
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: address
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
  id: Updated_at
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Updated_at
  nameWithType: IDToken.Updated_at
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Updated_at
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3436
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("updated_at")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public long? Updated_at { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonPropertyName("updated_at")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Updated_at As Long?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updated_at
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
  id: Claims_locales
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Claims_locales
  nameWithType: IDToken.Claims_locales
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Claims_locales
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3442
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("claims_locales")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Claims_locales { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("claims_locales")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Claims_locales As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: claims_locales
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
  id: Acr
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Acr
  nameWithType: IDToken.Acr
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Acr
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3448
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("acr")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Acr { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("acr")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Acr As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: acr
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
  id: S_hash
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: S_hash
  nameWithType: IDToken.S_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: S_hash
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3454
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("s_hash")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? S_hash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("s_hash")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property S_hash As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: s_hash
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
  id: AuthTime
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: AuthTime
  nameWithType: IDToken.AuthTime
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AuthTime
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3460
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("authTime")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      [Obsolete]

      public int? AuthTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("authTime")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      <Obsolete>

      Public Property AuthTime As Integer?
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: authTime
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
  id: Sid
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: Sid
  nameWithType: IDToken.Sid
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: Sid
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3467
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonPropertyName("sid")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public string? Sid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("sid")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property Sid As String
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sid
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
  commentId: P:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
  id: AdditionalProperties
  parent: Keycloak.AuthServices.Sdk.Admin.Models.IDToken
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: IDToken.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
  type: Property
  source:
    remote:
      path: src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
      branch: 107-docfx-documentation
      repo: https://github.com/NikiforovAll/keycloak-authorization-services-dotnet
    id: AdditionalProperties
    path: ../src/Keycloak.AuthServices.Sdk/Admin/Models/Contracts.cs
    startLine: 3475
  assemblies:
  - Keycloak.AuthServices.Sdk
  namespace: Keycloak.AuthServices.Sdk.Admin.Models
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties*
  attributes:
  - type: System.Text.Json.Serialization.JsonExtensionDataAttribute
    ctor: System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor
    arguments: []
references:
- uid: Keycloak.AuthServices.Sdk.Admin.Models
  commentId: N:Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.html
  name: Keycloak.AuthServices.Sdk.Admin.Models
  nameWithType: Keycloak.AuthServices.Sdk.Admin.Models
  fullName: Keycloak.AuthServices.Sdk.Admin.Models
  spec.csharp:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
  spec.vb:
  - uid: Keycloak
    name: Keycloak
    href: Keycloak.html
  - name: .
  - uid: Keycloak.AuthServices
    name: AuthServices
    href: Keycloak.AuthServices.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk
    name: Sdk
    href: Keycloak.AuthServices.Sdk.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin
    name: Admin
    href: Keycloak.AuthServices.Sdk.Admin.html
  - name: .
  - uid: Keycloak.AuthServices.Sdk.Admin.Models
    name: Models
    href: Keycloak.AuthServices.Sdk.Admin.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Jti
  name: Jti
  nameWithType: IDToken.Jti
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Jti
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Exp
  name: Exp
  nameWithType: IDToken.Exp
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Exp
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Nbf
  name: Nbf
  nameWithType: IDToken.Nbf
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nbf
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Iat
  name: Iat
  nameWithType: IDToken.Iat
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iat
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Iss
  name: Iss
  nameWithType: IDToken.Iss
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Iss
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Sub
  name: Sub
  nameWithType: IDToken.Sub
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sub
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Typ
  name: Typ
  nameWithType: IDToken.Typ
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Typ
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Azp
  name: Azp
  nameWithType: IDToken.Azp
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Azp
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_OtherClaims
  name: OtherClaims
  nameWithType: IDToken.OtherClaims
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.OtherClaims
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Nonce
  name: Nonce
  nameWithType: IDToken.Nonce
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nonce
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Auth_time
  name: Auth_time
  nameWithType: IDToken.Auth_time
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Auth_time
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Session_state
  name: Session_state
  nameWithType: IDToken.Session_state
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Session_state
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_At_hash
  name: At_hash
  nameWithType: IDToken.At_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.At_hash
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_C_hash
  name: C_hash
  nameWithType: IDToken.C_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.C_hash
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Name
  name: Name
  nameWithType: IDToken.Name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Given_name
  name: Given_name
  nameWithType: IDToken.Given_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Given_name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Family_name
  name: Family_name
  nameWithType: IDToken.Family_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Family_name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Middle_name
  name: Middle_name
  nameWithType: IDToken.Middle_name
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Middle_name
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Nickname
  name: Nickname
  nameWithType: IDToken.Nickname
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Nickname
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Preferred_username
  name: Preferred_username
  nameWithType: IDToken.Preferred_username
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Preferred_username
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Profile
  name: Profile
  nameWithType: IDToken.Profile
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Profile
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Picture
  name: Picture
  nameWithType: IDToken.Picture
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Picture
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Website
  name: Website
  nameWithType: IDToken.Website
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Website
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Email
  name: Email
  nameWithType: IDToken.Email
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Email_verified
  name: Email_verified
  nameWithType: IDToken.Email_verified
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Email_verified
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Gender
  name: Gender
  nameWithType: IDToken.Gender
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Gender
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Birthdate
  name: Birthdate
  nameWithType: IDToken.Birthdate
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Birthdate
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Zoneinfo
  name: Zoneinfo
  nameWithType: IDToken.Zoneinfo
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Zoneinfo
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Locale
  name: Locale
  nameWithType: IDToken.Locale
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Locale
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Phone_number
  name: Phone_number
  nameWithType: IDToken.Phone_number
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Phone_number_verified
  name: Phone_number_verified
  nameWithType: IDToken.Phone_number_verified
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Phone_number_verified
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Address
  name: Address
  nameWithType: IDToken.Address
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Address
- uid: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  commentId: T:Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
  parent: Keycloak.AuthServices.Sdk.Admin.Models
  href: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet.html
  name: AddressClaimSet
  nameWithType: AddressClaimSet
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.AddressClaimSet
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Updated_at
  name: Updated_at
  nameWithType: IDToken.Updated_at
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Updated_at
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Claims_locales
  name: Claims_locales
  nameWithType: IDToken.Claims_locales
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Claims_locales
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Acr
  name: Acr
  nameWithType: IDToken.Acr
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Acr
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_S_hash
  name: S_hash
  nameWithType: IDToken.S_hash
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.S_hash
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_AuthTime
  name: AuthTime
  nameWithType: IDToken.AuthTime
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AuthTime
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_Sid
  name: Sid
  nameWithType: IDToken.Sid
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.Sid
- uid: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties*
  commentId: Overload:Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
  href: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.html#Keycloak_AuthServices_Sdk_Admin_Models_IDToken_AdditionalProperties
  name: AdditionalProperties
  nameWithType: IDToken.AdditionalProperties
  fullName: Keycloak.AuthServices.Sdk.Admin.Models.IDToken.AdditionalProperties
