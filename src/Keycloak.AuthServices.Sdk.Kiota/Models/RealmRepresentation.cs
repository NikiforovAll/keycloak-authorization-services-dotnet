// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Keycloak.AuthServices.Sdk.Kiota.Admin.Models {
    public class RealmRepresentation : IAdditionalDataHolder, IParsable {
        /// <summary>The accessCodeLifespan property</summary>
        public int? AccessCodeLifespan { get; set; }
        /// <summary>The accessCodeLifespanLogin property</summary>
        public int? AccessCodeLifespanLogin { get; set; }
        /// <summary>The accessCodeLifespanUserAction property</summary>
        public int? AccessCodeLifespanUserAction { get; set; }
        /// <summary>The accessTokenLifespan property</summary>
        public int? AccessTokenLifespan { get; set; }
        /// <summary>The accessTokenLifespanForImplicitFlow property</summary>
        public int? AccessTokenLifespanForImplicitFlow { get; set; }
        /// <summary>The accountTheme property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountTheme { get; set; }
#nullable restore
#else
        public string AccountTheme { get; set; }
#endif
        /// <summary>The actionTokenGeneratedByAdminLifespan property</summary>
        public int? ActionTokenGeneratedByAdminLifespan { get; set; }
        /// <summary>The actionTokenGeneratedByUserLifespan property</summary>
        public int? ActionTokenGeneratedByUserLifespan { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The adminEventsDetailsEnabled property</summary>
        public bool? AdminEventsDetailsEnabled { get; set; }
        /// <summary>The adminEventsEnabled property</summary>
        public bool? AdminEventsEnabled { get; set; }
        /// <summary>The adminTheme property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdminTheme { get; set; }
#nullable restore
#else
        public string AdminTheme { get; set; }
#endif
        /// <summary>The applications property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ApplicationRepresentation>? Applications { get; set; }
#nullable restore
#else
        public List<ApplicationRepresentation> Applications { get; set; }
#endif
        /// <summary>The applicationScopeMappings property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_applicationScopeMappings? ApplicationScopeMappings { get; set; }
#nullable restore
#else
        public RealmRepresentation_applicationScopeMappings ApplicationScopeMappings { get; set; }
#endif
        /// <summary>The attributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_attributes? Attributes { get; set; }
#nullable restore
#else
        public RealmRepresentation_attributes Attributes { get; set; }
#endif
        /// <summary>The authenticationFlows property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AuthenticationFlowRepresentation>? AuthenticationFlows { get; set; }
#nullable restore
#else
        public List<AuthenticationFlowRepresentation> AuthenticationFlows { get; set; }
#endif
        /// <summary>The authenticatorConfig property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AuthenticatorConfigRepresentation>? AuthenticatorConfig { get; set; }
#nullable restore
#else
        public List<AuthenticatorConfigRepresentation> AuthenticatorConfig { get; set; }
#endif
        /// <summary>The browserFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrowserFlow { get; set; }
#nullable restore
#else
        public string BrowserFlow { get; set; }
#endif
        /// <summary>The browserSecurityHeaders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_browserSecurityHeaders? BrowserSecurityHeaders { get; set; }
#nullable restore
#else
        public RealmRepresentation_browserSecurityHeaders BrowserSecurityHeaders { get; set; }
#endif
        /// <summary>The bruteForceProtected property</summary>
        public bool? BruteForceProtected { get; set; }
        /// <summary>The certificate property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Certificate { get; set; }
#nullable restore
#else
        public string Certificate { get; set; }
#endif
        /// <summary>The clientAuthenticationFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientAuthenticationFlow { get; set; }
#nullable restore
#else
        public string ClientAuthenticationFlow { get; set; }
#endif
        /// <summary>The clientOfflineSessionIdleTimeout property</summary>
        public int? ClientOfflineSessionIdleTimeout { get; set; }
        /// <summary>The clientOfflineSessionMaxLifespan property</summary>
        public int? ClientOfflineSessionMaxLifespan { get; set; }
        /// <summary>The clientPolicies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClientPoliciesRepresentation? ClientPolicies { get; set; }
#nullable restore
#else
        public ClientPoliciesRepresentation ClientPolicies { get; set; }
#endif
        /// <summary>The clientProfiles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClientProfilesRepresentation? ClientProfiles { get; set; }
#nullable restore
#else
        public ClientProfilesRepresentation ClientProfiles { get; set; }
#endif
        /// <summary>The clients property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ClientRepresentation>? Clients { get; set; }
#nullable restore
#else
        public List<ClientRepresentation> Clients { get; set; }
#endif
        /// <summary>The clientScopeMappings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_clientScopeMappings? ClientScopeMappings { get; set; }
#nullable restore
#else
        public RealmRepresentation_clientScopeMappings ClientScopeMappings { get; set; }
#endif
        /// <summary>The clientScopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ClientScopeRepresentation>? ClientScopes { get; set; }
#nullable restore
#else
        public List<ClientScopeRepresentation> ClientScopes { get; set; }
#endif
        /// <summary>The clientSessionIdleTimeout property</summary>
        public int? ClientSessionIdleTimeout { get; set; }
        /// <summary>The clientSessionMaxLifespan property</summary>
        public int? ClientSessionMaxLifespan { get; set; }
        /// <summary>The clientTemplates property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ClientTemplateRepresentation>? ClientTemplates { get; set; }
#nullable restore
#else
        public List<ClientTemplateRepresentation> ClientTemplates { get; set; }
#endif
        /// <summary>The codeSecret property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CodeSecret { get; set; }
#nullable restore
#else
        public string CodeSecret { get; set; }
#endif
        /// <summary>The components property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public MultivaluedHashMapStringComponentExportRepresentation? Components { get; set; }
#nullable restore
#else
        public MultivaluedHashMapStringComponentExportRepresentation Components { get; set; }
#endif
        /// <summary>The defaultDefaultClientScopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultDefaultClientScopes { get; set; }
#nullable restore
#else
        public List<string> DefaultDefaultClientScopes { get; set; }
#endif
        /// <summary>The defaultGroups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultGroups { get; set; }
#nullable restore
#else
        public List<string> DefaultGroups { get; set; }
#endif
        /// <summary>The defaultLocale property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultLocale { get; set; }
#nullable restore
#else
        public string DefaultLocale { get; set; }
#endif
        /// <summary>The defaultOptionalClientScopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultOptionalClientScopes { get; set; }
#nullable restore
#else
        public List<string> DefaultOptionalClientScopes { get; set; }
#endif
        /// <summary>The defaultRole property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RoleRepresentation? DefaultRole { get; set; }
#nullable restore
#else
        public RoleRepresentation DefaultRole { get; set; }
#endif
        /// <summary>The defaultRoles property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultRoles { get; set; }
#nullable restore
#else
        public List<string> DefaultRoles { get; set; }
#endif
        /// <summary>The defaultSignatureAlgorithm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultSignatureAlgorithm { get; set; }
#nullable restore
#else
        public string DefaultSignatureAlgorithm { get; set; }
#endif
        /// <summary>The directGrantFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DirectGrantFlow { get; set; }
#nullable restore
#else
        public string DirectGrantFlow { get; set; }
#endif
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The displayNameHtml property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayNameHtml { get; set; }
#nullable restore
#else
        public string DisplayNameHtml { get; set; }
#endif
        /// <summary>The dockerAuthenticationFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DockerAuthenticationFlow { get; set; }
#nullable restore
#else
        public string DockerAuthenticationFlow { get; set; }
#endif
        /// <summary>The duplicateEmailsAllowed property</summary>
        public bool? DuplicateEmailsAllowed { get; set; }
        /// <summary>The editUsernameAllowed property</summary>
        public bool? EditUsernameAllowed { get; set; }
        /// <summary>The emailTheme property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailTheme { get; set; }
#nullable restore
#else
        public string EmailTheme { get; set; }
#endif
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The enabledEventTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EnabledEventTypes { get; set; }
#nullable restore
#else
        public List<string> EnabledEventTypes { get; set; }
#endif
        /// <summary>The eventsEnabled property</summary>
        public bool? EventsEnabled { get; set; }
        /// <summary>The eventsExpiration property</summary>
        public long? EventsExpiration { get; set; }
        /// <summary>The eventsListeners property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EventsListeners { get; set; }
#nullable restore
#else
        public List<string> EventsListeners { get; set; }
#endif
        /// <summary>The failureFactor property</summary>
        public int? FailureFactor { get; set; }
        /// <summary>The federatedUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserRepresentation>? FederatedUsers { get; set; }
#nullable restore
#else
        public List<UserRepresentation> FederatedUsers { get; set; }
#endif
        /// <summary>The firstBrokerLoginFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstBrokerLoginFlow { get; set; }
#nullable restore
#else
        public string FirstBrokerLoginFlow { get; set; }
#endif
        /// <summary>The groups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<GroupRepresentation>? Groups { get; set; }
#nullable restore
#else
        public List<GroupRepresentation> Groups { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The identityProviderMappers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<IdentityProviderMapperRepresentation>? IdentityProviderMappers { get; set; }
#nullable restore
#else
        public List<IdentityProviderMapperRepresentation> IdentityProviderMappers { get; set; }
#endif
        /// <summary>The identityProviders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<IdentityProviderRepresentation>? IdentityProviders { get; set; }
#nullable restore
#else
        public List<IdentityProviderRepresentation> IdentityProviders { get; set; }
#endif
        /// <summary>The internationalizationEnabled property</summary>
        public bool? InternationalizationEnabled { get; set; }
        /// <summary>The keycloakVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KeycloakVersion { get; set; }
#nullable restore
#else
        public string KeycloakVersion { get; set; }
#endif
        /// <summary>The localizationTexts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_localizationTexts? LocalizationTexts { get; set; }
#nullable restore
#else
        public RealmRepresentation_localizationTexts LocalizationTexts { get; set; }
#endif
        /// <summary>The loginTheme property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LoginTheme { get; set; }
#nullable restore
#else
        public string LoginTheme { get; set; }
#endif
        /// <summary>The loginWithEmailAllowed property</summary>
        public bool? LoginWithEmailAllowed { get; set; }
        /// <summary>The maxDeltaTimeSeconds property</summary>
        public int? MaxDeltaTimeSeconds { get; set; }
        /// <summary>The maxFailureWaitSeconds property</summary>
        public int? MaxFailureWaitSeconds { get; set; }
        /// <summary>The maxTemporaryLockouts property</summary>
        public int? MaxTemporaryLockouts { get; set; }
        /// <summary>The minimumQuickLoginWaitSeconds property</summary>
        public int? MinimumQuickLoginWaitSeconds { get; set; }
        /// <summary>The notBefore property</summary>
        public int? NotBefore { get; set; }
        /// <summary>The oauth2DeviceCodeLifespan property</summary>
        public int? Oauth2DeviceCodeLifespan { get; set; }
        /// <summary>The oauth2DevicePollingInterval property</summary>
        public int? Oauth2DevicePollingInterval { get; set; }
        /// <summary>The oauthClients property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<OAuthClientRepresentation>? OauthClients { get; set; }
#nullable restore
#else
        public List<OAuthClientRepresentation> OauthClients { get; set; }
#endif
        /// <summary>The offlineSessionIdleTimeout property</summary>
        public int? OfflineSessionIdleTimeout { get; set; }
        /// <summary>The offlineSessionMaxLifespan property</summary>
        public int? OfflineSessionMaxLifespan { get; set; }
        /// <summary>The offlineSessionMaxLifespanEnabled property</summary>
        public bool? OfflineSessionMaxLifespanEnabled { get; set; }
        /// <summary>The otpPolicyAlgorithm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OtpPolicyAlgorithm { get; set; }
#nullable restore
#else
        public string OtpPolicyAlgorithm { get; set; }
#endif
        /// <summary>The otpPolicyCodeReusable property</summary>
        public bool? OtpPolicyCodeReusable { get; set; }
        /// <summary>The otpPolicyDigits property</summary>
        public int? OtpPolicyDigits { get; set; }
        /// <summary>The otpPolicyInitialCounter property</summary>
        public int? OtpPolicyInitialCounter { get; set; }
        /// <summary>The otpPolicyLookAheadWindow property</summary>
        public int? OtpPolicyLookAheadWindow { get; set; }
        /// <summary>The otpPolicyPeriod property</summary>
        public int? OtpPolicyPeriod { get; set; }
        /// <summary>The otpPolicyType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OtpPolicyType { get; set; }
#nullable restore
#else
        public string OtpPolicyType { get; set; }
#endif
        /// <summary>The otpSupportedApplications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? OtpSupportedApplications { get; set; }
#nullable restore
#else
        public List<string> OtpSupportedApplications { get; set; }
#endif
        /// <summary>The passwordCredentialGrantAllowed property</summary>
        [Obsolete("")]
        public bool? PasswordCredentialGrantAllowed { get; set; }
        /// <summary>The passwordPolicy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PasswordPolicy { get; set; }
#nullable restore
#else
        public string PasswordPolicy { get; set; }
#endif
        /// <summary>The permanentLockout property</summary>
        public bool? PermanentLockout { get; set; }
        /// <summary>The privateKey property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivateKey { get; set; }
#nullable restore
#else
        public string PrivateKey { get; set; }
#endif
        /// <summary>The protocolMappers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ProtocolMapperRepresentation>? ProtocolMappers { get; set; }
#nullable restore
#else
        public List<ProtocolMapperRepresentation> ProtocolMappers { get; set; }
#endif
        /// <summary>The publicKey property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicKey { get; set; }
#nullable restore
#else
        public string PublicKey { get; set; }
#endif
        /// <summary>The quickLoginCheckMilliSeconds property</summary>
        public long? QuickLoginCheckMilliSeconds { get; set; }
        /// <summary>The realm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Realm { get; set; }
#nullable restore
#else
        public string Realm { get; set; }
#endif
        /// <summary>The realmCacheEnabled property</summary>
        [Obsolete("")]
        public bool? RealmCacheEnabled { get; set; }
        /// <summary>The oAuth2DeviceCodeLifespan property</summary>
        public int? RealmRepresentationOAuth2DeviceCodeLifespan { get; set; }
        /// <summary>The oAuth2DevicePollingInterval property</summary>
        public int? RealmRepresentationOAuth2DevicePollingInterval { get; set; }
        /// <summary>The refreshTokenMaxReuse property</summary>
        public int? RefreshTokenMaxReuse { get; set; }
        /// <summary>The registrationAllowed property</summary>
        public bool? RegistrationAllowed { get; set; }
        /// <summary>The registrationEmailAsUsername property</summary>
        public bool? RegistrationEmailAsUsername { get; set; }
        /// <summary>The registrationFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegistrationFlow { get; set; }
#nullable restore
#else
        public string RegistrationFlow { get; set; }
#endif
        /// <summary>The rememberMe property</summary>
        public bool? RememberMe { get; set; }
        /// <summary>The requiredActions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<RequiredActionProviderRepresentation>? RequiredActions { get; set; }
#nullable restore
#else
        public List<RequiredActionProviderRepresentation> RequiredActions { get; set; }
#endif
        /// <summary>The requiredCredentials property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RequiredCredentials { get; set; }
#nullable restore
#else
        public List<string> RequiredCredentials { get; set; }
#endif
        /// <summary>The resetCredentialsFlow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResetCredentialsFlow { get; set; }
#nullable restore
#else
        public string ResetCredentialsFlow { get; set; }
#endif
        /// <summary>The resetPasswordAllowed property</summary>
        public bool? ResetPasswordAllowed { get; set; }
        /// <summary>The revokeRefreshToken property</summary>
        public bool? RevokeRefreshToken { get; set; }
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RolesRepresentation? Roles { get; set; }
#nullable restore
#else
        public RolesRepresentation Roles { get; set; }
#endif
        /// <summary>The scopeMappings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ScopeMappingRepresentation>? ScopeMappings { get; set; }
#nullable restore
#else
        public List<ScopeMappingRepresentation> ScopeMappings { get; set; }
#endif
        /// <summary>The smtpServer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_smtpServer? SmtpServer { get; set; }
#nullable restore
#else
        public RealmRepresentation_smtpServer SmtpServer { get; set; }
#endif
        /// <summary>The social property</summary>
        [Obsolete("")]
        public bool? Social { get; set; }
        /// <summary>The socialProviders property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RealmRepresentation_socialProviders? SocialProviders { get; set; }
#nullable restore
#else
        public RealmRepresentation_socialProviders SocialProviders { get; set; }
#endif
        /// <summary>The sslRequired property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SslRequired { get; set; }
#nullable restore
#else
        public string SslRequired { get; set; }
#endif
        /// <summary>The ssoSessionIdleTimeout property</summary>
        public int? SsoSessionIdleTimeout { get; set; }
        /// <summary>The ssoSessionIdleTimeoutRememberMe property</summary>
        public int? SsoSessionIdleTimeoutRememberMe { get; set; }
        /// <summary>The ssoSessionMaxLifespan property</summary>
        public int? SsoSessionMaxLifespan { get; set; }
        /// <summary>The ssoSessionMaxLifespanRememberMe property</summary>
        public int? SsoSessionMaxLifespanRememberMe { get; set; }
        /// <summary>The supportedLocales property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SupportedLocales { get; set; }
#nullable restore
#else
        public List<string> SupportedLocales { get; set; }
#endif
        /// <summary>The updateProfileOnInitialSocialLogin property</summary>
        [Obsolete("")]
        public bool? UpdateProfileOnInitialSocialLogin { get; set; }
        /// <summary>The userCacheEnabled property</summary>
        [Obsolete("")]
        public bool? UserCacheEnabled { get; set; }
        /// <summary>The userFederationMappers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserFederationMapperRepresentation>? UserFederationMappers { get; set; }
#nullable restore
#else
        public List<UserFederationMapperRepresentation> UserFederationMappers { get; set; }
#endif
        /// <summary>The userFederationProviders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserFederationProviderRepresentation>? UserFederationProviders { get; set; }
#nullable restore
#else
        public List<UserFederationProviderRepresentation> UserFederationProviders { get; set; }
#endif
        /// <summary>The userManagedAccessAllowed property</summary>
        public bool? UserManagedAccessAllowed { get; set; }
        /// <summary>The users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserRepresentation>? Users { get; set; }
#nullable restore
#else
        public List<UserRepresentation> Users { get; set; }
#endif
        /// <summary>The verifyEmail property</summary>
        public bool? VerifyEmail { get; set; }
        /// <summary>The waitIncrementSeconds property</summary>
        public int? WaitIncrementSeconds { get; set; }
        /// <summary>The webAuthnPolicyAcceptableAaguids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicyAcceptableAaguids { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicyAcceptableAaguids { get; set; }
#endif
        /// <summary>The webAuthnPolicyAttestationConveyancePreference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyAttestationConveyancePreference { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyAttestationConveyancePreference { get; set; }
#endif
        /// <summary>The webAuthnPolicyAuthenticatorAttachment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyAuthenticatorAttachment { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyAuthenticatorAttachment { get; set; }
#endif
        /// <summary>The webAuthnPolicyAvoidSameAuthenticatorRegister property</summary>
        public bool? WebAuthnPolicyAvoidSameAuthenticatorRegister { get; set; }
        /// <summary>The webAuthnPolicyCreateTimeout property</summary>
        public int? WebAuthnPolicyCreateTimeout { get; set; }
        /// <summary>The webAuthnPolicyExtraOrigins property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicyExtraOrigins { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicyExtraOrigins { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessAcceptableAaguids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicyPasswordlessAcceptableAaguids { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicyPasswordlessAcceptableAaguids { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessAttestationConveyancePreference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessAttestationConveyancePreference { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessAttestationConveyancePreference { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessAuthenticatorAttachment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessAuthenticatorAttachment { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessAuthenticatorAttachment { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister property</summary>
        public bool? WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister { get; set; }
        /// <summary>The webAuthnPolicyPasswordlessCreateTimeout property</summary>
        public int? WebAuthnPolicyPasswordlessCreateTimeout { get; set; }
        /// <summary>The webAuthnPolicyPasswordlessExtraOrigins property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicyPasswordlessExtraOrigins { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicyPasswordlessExtraOrigins { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessRequireResidentKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessRequireResidentKey { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessRequireResidentKey { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessRpEntityName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessRpEntityName { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessRpEntityName { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessRpId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessRpId { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessRpId { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessSignatureAlgorithms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicyPasswordlessSignatureAlgorithms { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicyPasswordlessSignatureAlgorithms { get; set; }
#endif
        /// <summary>The webAuthnPolicyPasswordlessUserVerificationRequirement property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyPasswordlessUserVerificationRequirement { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyPasswordlessUserVerificationRequirement { get; set; }
#endif
        /// <summary>The webAuthnPolicyRequireResidentKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyRequireResidentKey { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyRequireResidentKey { get; set; }
#endif
        /// <summary>The webAuthnPolicyRpEntityName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyRpEntityName { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyRpEntityName { get; set; }
#endif
        /// <summary>The webAuthnPolicyRpId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyRpId { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyRpId { get; set; }
#endif
        /// <summary>The webAuthnPolicySignatureAlgorithms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WebAuthnPolicySignatureAlgorithms { get; set; }
#nullable restore
#else
        public List<string> WebAuthnPolicySignatureAlgorithms { get; set; }
#endif
        /// <summary>The webAuthnPolicyUserVerificationRequirement property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebAuthnPolicyUserVerificationRequirement { get; set; }
#nullable restore
#else
        public string WebAuthnPolicyUserVerificationRequirement { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="RealmRepresentation"/> and sets the default values.
        /// </summary>
        public RealmRepresentation() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="RealmRepresentation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static RealmRepresentation CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new RealmRepresentation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessCodeLifespan", n => { AccessCodeLifespan = n.GetIntValue(); } },
                {"accessCodeLifespanLogin", n => { AccessCodeLifespanLogin = n.GetIntValue(); } },
                {"accessCodeLifespanUserAction", n => { AccessCodeLifespanUserAction = n.GetIntValue(); } },
                {"accessTokenLifespan", n => { AccessTokenLifespan = n.GetIntValue(); } },
                {"accessTokenLifespanForImplicitFlow", n => { AccessTokenLifespanForImplicitFlow = n.GetIntValue(); } },
                {"accountTheme", n => { AccountTheme = n.GetStringValue(); } },
                {"actionTokenGeneratedByAdminLifespan", n => { ActionTokenGeneratedByAdminLifespan = n.GetIntValue(); } },
                {"actionTokenGeneratedByUserLifespan", n => { ActionTokenGeneratedByUserLifespan = n.GetIntValue(); } },
                {"adminEventsDetailsEnabled", n => { AdminEventsDetailsEnabled = n.GetBoolValue(); } },
                {"adminEventsEnabled", n => { AdminEventsEnabled = n.GetBoolValue(); } },
                {"adminTheme", n => { AdminTheme = n.GetStringValue(); } },
                {"applicationScopeMappings", n => { ApplicationScopeMappings = n.GetObjectValue<RealmRepresentation_applicationScopeMappings>(RealmRepresentation_applicationScopeMappings.CreateFromDiscriminatorValue); } },
                {"applications", n => { Applications = n.GetCollectionOfObjectValues<ApplicationRepresentation>(ApplicationRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"attributes", n => { Attributes = n.GetObjectValue<RealmRepresentation_attributes>(RealmRepresentation_attributes.CreateFromDiscriminatorValue); } },
                {"authenticationFlows", n => { AuthenticationFlows = n.GetCollectionOfObjectValues<AuthenticationFlowRepresentation>(AuthenticationFlowRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"authenticatorConfig", n => { AuthenticatorConfig = n.GetCollectionOfObjectValues<AuthenticatorConfigRepresentation>(AuthenticatorConfigRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"browserFlow", n => { BrowserFlow = n.GetStringValue(); } },
                {"browserSecurityHeaders", n => { BrowserSecurityHeaders = n.GetObjectValue<RealmRepresentation_browserSecurityHeaders>(RealmRepresentation_browserSecurityHeaders.CreateFromDiscriminatorValue); } },
                {"bruteForceProtected", n => { BruteForceProtected = n.GetBoolValue(); } },
                {"certificate", n => { Certificate = n.GetStringValue(); } },
                {"clientAuthenticationFlow", n => { ClientAuthenticationFlow = n.GetStringValue(); } },
                {"clientOfflineSessionIdleTimeout", n => { ClientOfflineSessionIdleTimeout = n.GetIntValue(); } },
                {"clientOfflineSessionMaxLifespan", n => { ClientOfflineSessionMaxLifespan = n.GetIntValue(); } },
                {"clientPolicies", n => { ClientPolicies = n.GetObjectValue<ClientPoliciesRepresentation>(ClientPoliciesRepresentation.CreateFromDiscriminatorValue); } },
                {"clientProfiles", n => { ClientProfiles = n.GetObjectValue<ClientProfilesRepresentation>(ClientProfilesRepresentation.CreateFromDiscriminatorValue); } },
                {"clientScopeMappings", n => { ClientScopeMappings = n.GetObjectValue<RealmRepresentation_clientScopeMappings>(RealmRepresentation_clientScopeMappings.CreateFromDiscriminatorValue); } },
                {"clientScopes", n => { ClientScopes = n.GetCollectionOfObjectValues<ClientScopeRepresentation>(ClientScopeRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"clientSessionIdleTimeout", n => { ClientSessionIdleTimeout = n.GetIntValue(); } },
                {"clientSessionMaxLifespan", n => { ClientSessionMaxLifespan = n.GetIntValue(); } },
                {"clientTemplates", n => { ClientTemplates = n.GetCollectionOfObjectValues<ClientTemplateRepresentation>(ClientTemplateRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"clients", n => { Clients = n.GetCollectionOfObjectValues<ClientRepresentation>(ClientRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"codeSecret", n => { CodeSecret = n.GetStringValue(); } },
                {"components", n => { Components = n.GetObjectValue<MultivaluedHashMapStringComponentExportRepresentation>(MultivaluedHashMapStringComponentExportRepresentation.CreateFromDiscriminatorValue); } },
                {"defaultDefaultClientScopes", n => { DefaultDefaultClientScopes = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"defaultGroups", n => { DefaultGroups = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"defaultLocale", n => { DefaultLocale = n.GetStringValue(); } },
                {"defaultOptionalClientScopes", n => { DefaultOptionalClientScopes = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"defaultRole", n => { DefaultRole = n.GetObjectValue<RoleRepresentation>(RoleRepresentation.CreateFromDiscriminatorValue); } },
                {"defaultRoles", n => { DefaultRoles = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"defaultSignatureAlgorithm", n => { DefaultSignatureAlgorithm = n.GetStringValue(); } },
                {"directGrantFlow", n => { DirectGrantFlow = n.GetStringValue(); } },
                {"displayName", n => { DisplayName = n.GetStringValue(); } },
                {"displayNameHtml", n => { DisplayNameHtml = n.GetStringValue(); } },
                {"dockerAuthenticationFlow", n => { DockerAuthenticationFlow = n.GetStringValue(); } },
                {"duplicateEmailsAllowed", n => { DuplicateEmailsAllowed = n.GetBoolValue(); } },
                {"editUsernameAllowed", n => { EditUsernameAllowed = n.GetBoolValue(); } },
                {"emailTheme", n => { EmailTheme = n.GetStringValue(); } },
                {"enabled", n => { Enabled = n.GetBoolValue(); } },
                {"enabledEventTypes", n => { EnabledEventTypes = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"eventsEnabled", n => { EventsEnabled = n.GetBoolValue(); } },
                {"eventsExpiration", n => { EventsExpiration = n.GetLongValue(); } },
                {"eventsListeners", n => { EventsListeners = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"failureFactor", n => { FailureFactor = n.GetIntValue(); } },
                {"federatedUsers", n => { FederatedUsers = n.GetCollectionOfObjectValues<UserRepresentation>(UserRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"firstBrokerLoginFlow", n => { FirstBrokerLoginFlow = n.GetStringValue(); } },
                {"groups", n => { Groups = n.GetCollectionOfObjectValues<GroupRepresentation>(GroupRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"identityProviderMappers", n => { IdentityProviderMappers = n.GetCollectionOfObjectValues<IdentityProviderMapperRepresentation>(IdentityProviderMapperRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"identityProviders", n => { IdentityProviders = n.GetCollectionOfObjectValues<IdentityProviderRepresentation>(IdentityProviderRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"internationalizationEnabled", n => { InternationalizationEnabled = n.GetBoolValue(); } },
                {"keycloakVersion", n => { KeycloakVersion = n.GetStringValue(); } },
                {"localizationTexts", n => { LocalizationTexts = n.GetObjectValue<RealmRepresentation_localizationTexts>(RealmRepresentation_localizationTexts.CreateFromDiscriminatorValue); } },
                {"loginTheme", n => { LoginTheme = n.GetStringValue(); } },
                {"loginWithEmailAllowed", n => { LoginWithEmailAllowed = n.GetBoolValue(); } },
                {"maxDeltaTimeSeconds", n => { MaxDeltaTimeSeconds = n.GetIntValue(); } },
                {"maxFailureWaitSeconds", n => { MaxFailureWaitSeconds = n.GetIntValue(); } },
                {"maxTemporaryLockouts", n => { MaxTemporaryLockouts = n.GetIntValue(); } },
                {"minimumQuickLoginWaitSeconds", n => { MinimumQuickLoginWaitSeconds = n.GetIntValue(); } },
                {"notBefore", n => { NotBefore = n.GetIntValue(); } },
                {"oauth2DeviceCodeLifespan", n => { Oauth2DeviceCodeLifespan = n.GetIntValue(); } },
                {"oauth2DevicePollingInterval", n => { Oauth2DevicePollingInterval = n.GetIntValue(); } },
                {"oauthClients", n => { OauthClients = n.GetCollectionOfObjectValues<OAuthClientRepresentation>(OAuthClientRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"offlineSessionIdleTimeout", n => { OfflineSessionIdleTimeout = n.GetIntValue(); } },
                {"offlineSessionMaxLifespan", n => { OfflineSessionMaxLifespan = n.GetIntValue(); } },
                {"offlineSessionMaxLifespanEnabled", n => { OfflineSessionMaxLifespanEnabled = n.GetBoolValue(); } },
                {"otpPolicyAlgorithm", n => { OtpPolicyAlgorithm = n.GetStringValue(); } },
                {"otpPolicyCodeReusable", n => { OtpPolicyCodeReusable = n.GetBoolValue(); } },
                {"otpPolicyDigits", n => { OtpPolicyDigits = n.GetIntValue(); } },
                {"otpPolicyInitialCounter", n => { OtpPolicyInitialCounter = n.GetIntValue(); } },
                {"otpPolicyLookAheadWindow", n => { OtpPolicyLookAheadWindow = n.GetIntValue(); } },
                {"otpPolicyPeriod", n => { OtpPolicyPeriod = n.GetIntValue(); } },
                {"otpPolicyType", n => { OtpPolicyType = n.GetStringValue(); } },
                {"otpSupportedApplications", n => { OtpSupportedApplications = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"passwordCredentialGrantAllowed", n => { PasswordCredentialGrantAllowed = n.GetBoolValue(); } },
                {"passwordPolicy", n => { PasswordPolicy = n.GetStringValue(); } },
                {"permanentLockout", n => { PermanentLockout = n.GetBoolValue(); } },
                {"privateKey", n => { PrivateKey = n.GetStringValue(); } },
                {"protocolMappers", n => { ProtocolMappers = n.GetCollectionOfObjectValues<ProtocolMapperRepresentation>(ProtocolMapperRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"publicKey", n => { PublicKey = n.GetStringValue(); } },
                {"quickLoginCheckMilliSeconds", n => { QuickLoginCheckMilliSeconds = n.GetLongValue(); } },
                {"realm", n => { Realm = n.GetStringValue(); } },
                {"realmCacheEnabled", n => { RealmCacheEnabled = n.GetBoolValue(); } },
                {"oAuth2DeviceCodeLifespan", n => { RealmRepresentationOAuth2DeviceCodeLifespan = n.GetIntValue(); } },
                {"oAuth2DevicePollingInterval", n => { RealmRepresentationOAuth2DevicePollingInterval = n.GetIntValue(); } },
                {"refreshTokenMaxReuse", n => { RefreshTokenMaxReuse = n.GetIntValue(); } },
                {"registrationAllowed", n => { RegistrationAllowed = n.GetBoolValue(); } },
                {"registrationEmailAsUsername", n => { RegistrationEmailAsUsername = n.GetBoolValue(); } },
                {"registrationFlow", n => { RegistrationFlow = n.GetStringValue(); } },
                {"rememberMe", n => { RememberMe = n.GetBoolValue(); } },
                {"requiredActions", n => { RequiredActions = n.GetCollectionOfObjectValues<RequiredActionProviderRepresentation>(RequiredActionProviderRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"requiredCredentials", n => { RequiredCredentials = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"resetCredentialsFlow", n => { ResetCredentialsFlow = n.GetStringValue(); } },
                {"resetPasswordAllowed", n => { ResetPasswordAllowed = n.GetBoolValue(); } },
                {"revokeRefreshToken", n => { RevokeRefreshToken = n.GetBoolValue(); } },
                {"roles", n => { Roles = n.GetObjectValue<RolesRepresentation>(RolesRepresentation.CreateFromDiscriminatorValue); } },
                {"scopeMappings", n => { ScopeMappings = n.GetCollectionOfObjectValues<ScopeMappingRepresentation>(ScopeMappingRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"smtpServer", n => { SmtpServer = n.GetObjectValue<RealmRepresentation_smtpServer>(RealmRepresentation_smtpServer.CreateFromDiscriminatorValue); } },
                {"social", n => { Social = n.GetBoolValue(); } },
                {"socialProviders", n => { SocialProviders = n.GetObjectValue<RealmRepresentation_socialProviders>(RealmRepresentation_socialProviders.CreateFromDiscriminatorValue); } },
                {"sslRequired", n => { SslRequired = n.GetStringValue(); } },
                {"ssoSessionIdleTimeout", n => { SsoSessionIdleTimeout = n.GetIntValue(); } },
                {"ssoSessionIdleTimeoutRememberMe", n => { SsoSessionIdleTimeoutRememberMe = n.GetIntValue(); } },
                {"ssoSessionMaxLifespan", n => { SsoSessionMaxLifespan = n.GetIntValue(); } },
                {"ssoSessionMaxLifespanRememberMe", n => { SsoSessionMaxLifespanRememberMe = n.GetIntValue(); } },
                {"supportedLocales", n => { SupportedLocales = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"updateProfileOnInitialSocialLogin", n => { UpdateProfileOnInitialSocialLogin = n.GetBoolValue(); } },
                {"userCacheEnabled", n => { UserCacheEnabled = n.GetBoolValue(); } },
                {"userFederationMappers", n => { UserFederationMappers = n.GetCollectionOfObjectValues<UserFederationMapperRepresentation>(UserFederationMapperRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"userFederationProviders", n => { UserFederationProviders = n.GetCollectionOfObjectValues<UserFederationProviderRepresentation>(UserFederationProviderRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"userManagedAccessAllowed", n => { UserManagedAccessAllowed = n.GetBoolValue(); } },
                {"users", n => { Users = n.GetCollectionOfObjectValues<UserRepresentation>(UserRepresentation.CreateFromDiscriminatorValue)?.ToList(); } },
                {"verifyEmail", n => { VerifyEmail = n.GetBoolValue(); } },
                {"waitIncrementSeconds", n => { WaitIncrementSeconds = n.GetIntValue(); } },
                {"webAuthnPolicyAcceptableAaguids", n => { WebAuthnPolicyAcceptableAaguids = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyAttestationConveyancePreference", n => { WebAuthnPolicyAttestationConveyancePreference = n.GetStringValue(); } },
                {"webAuthnPolicyAuthenticatorAttachment", n => { WebAuthnPolicyAuthenticatorAttachment = n.GetStringValue(); } },
                {"webAuthnPolicyAvoidSameAuthenticatorRegister", n => { WebAuthnPolicyAvoidSameAuthenticatorRegister = n.GetBoolValue(); } },
                {"webAuthnPolicyCreateTimeout", n => { WebAuthnPolicyCreateTimeout = n.GetIntValue(); } },
                {"webAuthnPolicyExtraOrigins", n => { WebAuthnPolicyExtraOrigins = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyPasswordlessAcceptableAaguids", n => { WebAuthnPolicyPasswordlessAcceptableAaguids = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyPasswordlessAttestationConveyancePreference", n => { WebAuthnPolicyPasswordlessAttestationConveyancePreference = n.GetStringValue(); } },
                {"webAuthnPolicyPasswordlessAuthenticatorAttachment", n => { WebAuthnPolicyPasswordlessAuthenticatorAttachment = n.GetStringValue(); } },
                {"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister", n => { WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = n.GetBoolValue(); } },
                {"webAuthnPolicyPasswordlessCreateTimeout", n => { WebAuthnPolicyPasswordlessCreateTimeout = n.GetIntValue(); } },
                {"webAuthnPolicyPasswordlessExtraOrigins", n => { WebAuthnPolicyPasswordlessExtraOrigins = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyPasswordlessRequireResidentKey", n => { WebAuthnPolicyPasswordlessRequireResidentKey = n.GetStringValue(); } },
                {"webAuthnPolicyPasswordlessRpEntityName", n => { WebAuthnPolicyPasswordlessRpEntityName = n.GetStringValue(); } },
                {"webAuthnPolicyPasswordlessRpId", n => { WebAuthnPolicyPasswordlessRpId = n.GetStringValue(); } },
                {"webAuthnPolicyPasswordlessSignatureAlgorithms", n => { WebAuthnPolicyPasswordlessSignatureAlgorithms = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyPasswordlessUserVerificationRequirement", n => { WebAuthnPolicyPasswordlessUserVerificationRequirement = n.GetStringValue(); } },
                {"webAuthnPolicyRequireResidentKey", n => { WebAuthnPolicyRequireResidentKey = n.GetStringValue(); } },
                {"webAuthnPolicyRpEntityName", n => { WebAuthnPolicyRpEntityName = n.GetStringValue(); } },
                {"webAuthnPolicyRpId", n => { WebAuthnPolicyRpId = n.GetStringValue(); } },
                {"webAuthnPolicySignatureAlgorithms", n => { WebAuthnPolicySignatureAlgorithms = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"webAuthnPolicyUserVerificationRequirement", n => { WebAuthnPolicyUserVerificationRequirement = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("accessCodeLifespan", AccessCodeLifespan);
            writer.WriteIntValue("accessCodeLifespanLogin", AccessCodeLifespanLogin);
            writer.WriteIntValue("accessCodeLifespanUserAction", AccessCodeLifespanUserAction);
            writer.WriteIntValue("accessTokenLifespan", AccessTokenLifespan);
            writer.WriteIntValue("accessTokenLifespanForImplicitFlow", AccessTokenLifespanForImplicitFlow);
            writer.WriteStringValue("accountTheme", AccountTheme);
            writer.WriteIntValue("actionTokenGeneratedByAdminLifespan", ActionTokenGeneratedByAdminLifespan);
            writer.WriteIntValue("actionTokenGeneratedByUserLifespan", ActionTokenGeneratedByUserLifespan);
            writer.WriteBoolValue("adminEventsDetailsEnabled", AdminEventsDetailsEnabled);
            writer.WriteBoolValue("adminEventsEnabled", AdminEventsEnabled);
            writer.WriteStringValue("adminTheme", AdminTheme);
            writer.WriteCollectionOfObjectValues<ApplicationRepresentation>("applications", Applications);
            writer.WriteObjectValue<RealmRepresentation_applicationScopeMappings>("applicationScopeMappings", ApplicationScopeMappings);
            writer.WriteObjectValue<RealmRepresentation_attributes>("attributes", Attributes);
            writer.WriteCollectionOfObjectValues<AuthenticationFlowRepresentation>("authenticationFlows", AuthenticationFlows);
            writer.WriteCollectionOfObjectValues<AuthenticatorConfigRepresentation>("authenticatorConfig", AuthenticatorConfig);
            writer.WriteStringValue("browserFlow", BrowserFlow);
            writer.WriteObjectValue<RealmRepresentation_browserSecurityHeaders>("browserSecurityHeaders", BrowserSecurityHeaders);
            writer.WriteBoolValue("bruteForceProtected", BruteForceProtected);
            writer.WriteStringValue("certificate", Certificate);
            writer.WriteStringValue("clientAuthenticationFlow", ClientAuthenticationFlow);
            writer.WriteIntValue("clientOfflineSessionIdleTimeout", ClientOfflineSessionIdleTimeout);
            writer.WriteIntValue("clientOfflineSessionMaxLifespan", ClientOfflineSessionMaxLifespan);
            writer.WriteObjectValue<ClientPoliciesRepresentation>("clientPolicies", ClientPolicies);
            writer.WriteObjectValue<ClientProfilesRepresentation>("clientProfiles", ClientProfiles);
            writer.WriteCollectionOfObjectValues<ClientRepresentation>("clients", Clients);
            writer.WriteObjectValue<RealmRepresentation_clientScopeMappings>("clientScopeMappings", ClientScopeMappings);
            writer.WriteCollectionOfObjectValues<ClientScopeRepresentation>("clientScopes", ClientScopes);
            writer.WriteIntValue("clientSessionIdleTimeout", ClientSessionIdleTimeout);
            writer.WriteIntValue("clientSessionMaxLifespan", ClientSessionMaxLifespan);
            writer.WriteCollectionOfObjectValues<ClientTemplateRepresentation>("clientTemplates", ClientTemplates);
            writer.WriteStringValue("codeSecret", CodeSecret);
            writer.WriteObjectValue<MultivaluedHashMapStringComponentExportRepresentation>("components", Components);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultDefaultClientScopes", DefaultDefaultClientScopes);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultGroups", DefaultGroups);
            writer.WriteStringValue("defaultLocale", DefaultLocale);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultOptionalClientScopes", DefaultOptionalClientScopes);
            writer.WriteObjectValue<RoleRepresentation>("defaultRole", DefaultRole);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultRoles", DefaultRoles);
            writer.WriteStringValue("defaultSignatureAlgorithm", DefaultSignatureAlgorithm);
            writer.WriteStringValue("directGrantFlow", DirectGrantFlow);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("displayNameHtml", DisplayNameHtml);
            writer.WriteStringValue("dockerAuthenticationFlow", DockerAuthenticationFlow);
            writer.WriteBoolValue("duplicateEmailsAllowed", DuplicateEmailsAllowed);
            writer.WriteBoolValue("editUsernameAllowed", EditUsernameAllowed);
            writer.WriteStringValue("emailTheme", EmailTheme);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteCollectionOfPrimitiveValues<string>("enabledEventTypes", EnabledEventTypes);
            writer.WriteBoolValue("eventsEnabled", EventsEnabled);
            writer.WriteLongValue("eventsExpiration", EventsExpiration);
            writer.WriteCollectionOfPrimitiveValues<string>("eventsListeners", EventsListeners);
            writer.WriteIntValue("failureFactor", FailureFactor);
            writer.WriteCollectionOfObjectValues<UserRepresentation>("federatedUsers", FederatedUsers);
            writer.WriteStringValue("firstBrokerLoginFlow", FirstBrokerLoginFlow);
            writer.WriteCollectionOfObjectValues<GroupRepresentation>("groups", Groups);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfObjectValues<IdentityProviderMapperRepresentation>("identityProviderMappers", IdentityProviderMappers);
            writer.WriteCollectionOfObjectValues<IdentityProviderRepresentation>("identityProviders", IdentityProviders);
            writer.WriteBoolValue("internationalizationEnabled", InternationalizationEnabled);
            writer.WriteStringValue("keycloakVersion", KeycloakVersion);
            writer.WriteObjectValue<RealmRepresentation_localizationTexts>("localizationTexts", LocalizationTexts);
            writer.WriteStringValue("loginTheme", LoginTheme);
            writer.WriteBoolValue("loginWithEmailAllowed", LoginWithEmailAllowed);
            writer.WriteIntValue("maxDeltaTimeSeconds", MaxDeltaTimeSeconds);
            writer.WriteIntValue("maxFailureWaitSeconds", MaxFailureWaitSeconds);
            writer.WriteIntValue("maxTemporaryLockouts", MaxTemporaryLockouts);
            writer.WriteIntValue("minimumQuickLoginWaitSeconds", MinimumQuickLoginWaitSeconds);
            writer.WriteIntValue("notBefore", NotBefore);
            writer.WriteIntValue("oauth2DeviceCodeLifespan", Oauth2DeviceCodeLifespan);
            writer.WriteIntValue("oauth2DevicePollingInterval", Oauth2DevicePollingInterval);
            writer.WriteCollectionOfObjectValues<OAuthClientRepresentation>("oauthClients", OauthClients);
            writer.WriteIntValue("offlineSessionIdleTimeout", OfflineSessionIdleTimeout);
            writer.WriteIntValue("offlineSessionMaxLifespan", OfflineSessionMaxLifespan);
            writer.WriteBoolValue("offlineSessionMaxLifespanEnabled", OfflineSessionMaxLifespanEnabled);
            writer.WriteStringValue("otpPolicyAlgorithm", OtpPolicyAlgorithm);
            writer.WriteBoolValue("otpPolicyCodeReusable", OtpPolicyCodeReusable);
            writer.WriteIntValue("otpPolicyDigits", OtpPolicyDigits);
            writer.WriteIntValue("otpPolicyInitialCounter", OtpPolicyInitialCounter);
            writer.WriteIntValue("otpPolicyLookAheadWindow", OtpPolicyLookAheadWindow);
            writer.WriteIntValue("otpPolicyPeriod", OtpPolicyPeriod);
            writer.WriteStringValue("otpPolicyType", OtpPolicyType);
            writer.WriteCollectionOfPrimitiveValues<string>("otpSupportedApplications", OtpSupportedApplications);
            writer.WriteBoolValue("passwordCredentialGrantAllowed", PasswordCredentialGrantAllowed);
            writer.WriteStringValue("passwordPolicy", PasswordPolicy);
            writer.WriteBoolValue("permanentLockout", PermanentLockout);
            writer.WriteStringValue("privateKey", PrivateKey);
            writer.WriteCollectionOfObjectValues<ProtocolMapperRepresentation>("protocolMappers", ProtocolMappers);
            writer.WriteStringValue("publicKey", PublicKey);
            writer.WriteLongValue("quickLoginCheckMilliSeconds", QuickLoginCheckMilliSeconds);
            writer.WriteStringValue("realm", Realm);
            writer.WriteBoolValue("realmCacheEnabled", RealmCacheEnabled);
            writer.WriteIntValue("oAuth2DeviceCodeLifespan", RealmRepresentationOAuth2DeviceCodeLifespan);
            writer.WriteIntValue("oAuth2DevicePollingInterval", RealmRepresentationOAuth2DevicePollingInterval);
            writer.WriteIntValue("refreshTokenMaxReuse", RefreshTokenMaxReuse);
            writer.WriteBoolValue("registrationAllowed", RegistrationAllowed);
            writer.WriteBoolValue("registrationEmailAsUsername", RegistrationEmailAsUsername);
            writer.WriteStringValue("registrationFlow", RegistrationFlow);
            writer.WriteBoolValue("rememberMe", RememberMe);
            writer.WriteCollectionOfObjectValues<RequiredActionProviderRepresentation>("requiredActions", RequiredActions);
            writer.WriteCollectionOfPrimitiveValues<string>("requiredCredentials", RequiredCredentials);
            writer.WriteStringValue("resetCredentialsFlow", ResetCredentialsFlow);
            writer.WriteBoolValue("resetPasswordAllowed", ResetPasswordAllowed);
            writer.WriteBoolValue("revokeRefreshToken", RevokeRefreshToken);
            writer.WriteObjectValue<RolesRepresentation>("roles", Roles);
            writer.WriteCollectionOfObjectValues<ScopeMappingRepresentation>("scopeMappings", ScopeMappings);
            writer.WriteObjectValue<RealmRepresentation_smtpServer>("smtpServer", SmtpServer);
            writer.WriteBoolValue("social", Social);
            writer.WriteObjectValue<RealmRepresentation_socialProviders>("socialProviders", SocialProviders);
            writer.WriteStringValue("sslRequired", SslRequired);
            writer.WriteIntValue("ssoSessionIdleTimeout", SsoSessionIdleTimeout);
            writer.WriteIntValue("ssoSessionIdleTimeoutRememberMe", SsoSessionIdleTimeoutRememberMe);
            writer.WriteIntValue("ssoSessionMaxLifespan", SsoSessionMaxLifespan);
            writer.WriteIntValue("ssoSessionMaxLifespanRememberMe", SsoSessionMaxLifespanRememberMe);
            writer.WriteCollectionOfPrimitiveValues<string>("supportedLocales", SupportedLocales);
            writer.WriteBoolValue("updateProfileOnInitialSocialLogin", UpdateProfileOnInitialSocialLogin);
            writer.WriteBoolValue("userCacheEnabled", UserCacheEnabled);
            writer.WriteCollectionOfObjectValues<UserFederationMapperRepresentation>("userFederationMappers", UserFederationMappers);
            writer.WriteCollectionOfObjectValues<UserFederationProviderRepresentation>("userFederationProviders", UserFederationProviders);
            writer.WriteBoolValue("userManagedAccessAllowed", UserManagedAccessAllowed);
            writer.WriteCollectionOfObjectValues<UserRepresentation>("users", Users);
            writer.WriteBoolValue("verifyEmail", VerifyEmail);
            writer.WriteIntValue("waitIncrementSeconds", WaitIncrementSeconds);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicyAcceptableAaguids", WebAuthnPolicyAcceptableAaguids);
            writer.WriteStringValue("webAuthnPolicyAttestationConveyancePreference", WebAuthnPolicyAttestationConveyancePreference);
            writer.WriteStringValue("webAuthnPolicyAuthenticatorAttachment", WebAuthnPolicyAuthenticatorAttachment);
            writer.WriteBoolValue("webAuthnPolicyAvoidSameAuthenticatorRegister", WebAuthnPolicyAvoidSameAuthenticatorRegister);
            writer.WriteIntValue("webAuthnPolicyCreateTimeout", WebAuthnPolicyCreateTimeout);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicyExtraOrigins", WebAuthnPolicyExtraOrigins);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicyPasswordlessAcceptableAaguids", WebAuthnPolicyPasswordlessAcceptableAaguids);
            writer.WriteStringValue("webAuthnPolicyPasswordlessAttestationConveyancePreference", WebAuthnPolicyPasswordlessAttestationConveyancePreference);
            writer.WriteStringValue("webAuthnPolicyPasswordlessAuthenticatorAttachment", WebAuthnPolicyPasswordlessAuthenticatorAttachment);
            writer.WriteBoolValue("webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister", WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister);
            writer.WriteIntValue("webAuthnPolicyPasswordlessCreateTimeout", WebAuthnPolicyPasswordlessCreateTimeout);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicyPasswordlessExtraOrigins", WebAuthnPolicyPasswordlessExtraOrigins);
            writer.WriteStringValue("webAuthnPolicyPasswordlessRequireResidentKey", WebAuthnPolicyPasswordlessRequireResidentKey);
            writer.WriteStringValue("webAuthnPolicyPasswordlessRpEntityName", WebAuthnPolicyPasswordlessRpEntityName);
            writer.WriteStringValue("webAuthnPolicyPasswordlessRpId", WebAuthnPolicyPasswordlessRpId);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicyPasswordlessSignatureAlgorithms", WebAuthnPolicyPasswordlessSignatureAlgorithms);
            writer.WriteStringValue("webAuthnPolicyPasswordlessUserVerificationRequirement", WebAuthnPolicyPasswordlessUserVerificationRequirement);
            writer.WriteStringValue("webAuthnPolicyRequireResidentKey", WebAuthnPolicyRequireResidentKey);
            writer.WriteStringValue("webAuthnPolicyRpEntityName", WebAuthnPolicyRpEntityName);
            writer.WriteStringValue("webAuthnPolicyRpId", WebAuthnPolicyRpId);
            writer.WriteCollectionOfPrimitiveValues<string>("webAuthnPolicySignatureAlgorithms", WebAuthnPolicySignatureAlgorithms);
            writer.WriteStringValue("webAuthnPolicyUserVerificationRequirement", WebAuthnPolicyUserVerificationRequirement);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
