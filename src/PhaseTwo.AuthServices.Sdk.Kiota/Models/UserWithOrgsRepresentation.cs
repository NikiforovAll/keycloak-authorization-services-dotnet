// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UserWithOrgsRepresentation : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation_attributes? Attributes { get; set; }
#nullable restore
#else
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation_attributes Attributes { get; set; }
#endif
        /// <summary>The createdTimestamp property</summary>
        public long? CreatedTimestamp { get; set; }
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The emailVerified property</summary>
        public bool? EmailVerified { get; set; }
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The firstName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The groups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Groups { get; set; }
#nullable restore
#else
        public List<string> Groups { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The lastName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The organizations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.OrganizationRoleMapRepresentation? Organizations { get; set; }
#nullable restore
#else
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.OrganizationRoleMapRepresentation Organizations { get; set; }
#endif
        /// <summary>The username property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username { get; set; }
#nullable restore
#else
        public string Username { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation"/> and sets the default values.
        /// </summary>
        public UserWithOrgsRepresentation()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attributes", n => { Attributes = n.GetObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation_attributes>(global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation_attributes.CreateFromDiscriminatorValue); } },
                { "createdTimestamp", n => { CreatedTimestamp = n.GetLongValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "emailVerified", n => { EmailVerified = n.GetBoolValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "groups", n => { Groups = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "organizations", n => { Organizations = n.GetObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.OrganizationRoleMapRepresentation>(global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.OrganizationRoleMapRepresentation.CreateFromDiscriminatorValue); } },
                { "username", n => { Username = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.UserWithOrgsRepresentation_attributes>("attributes", Attributes);
            writer.WriteLongValue("createdTimestamp", CreatedTimestamp);
            writer.WriteStringValue("email", Email);
            writer.WriteBoolValue("emailVerified", EmailVerified);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteCollectionOfPrimitiveValues<string>("groups", Groups);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.OrganizationRoleMapRepresentation>("organizations", Organizations);
            writer.WriteStringValue("username", Username);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
