// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WebhookSendRepresentation : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The event_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EventId { get; set; }
#nullable restore
#else
        public string EventId { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The keycloak_event_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KeycloakEventId { get; set; }
#nullable restore
#else
        public string KeycloakEventId { get; set; }
#endif
        /// <summary>The keycloak_event_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KeycloakEventType { get; set; }
#nullable restore
#else
        public string KeycloakEventType { get; set; }
#endif
        /// <summary>The payload property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Payload { get; set; }
#nullable restore
#else
        public string Payload { get; set; }
#endif
        /// <summary>The retried property</summary>
        public int? Retried { get; set; }
        /// <summary>The sent_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SentAt { get; set; }
#nullable restore
#else
        public string SentAt { get; set; }
#endif
        /// <summary>The status property</summary>
        public int? Status { get; set; }
        /// <summary>The status_message property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusMessage { get; set; }
#nullable restore
#else
        public string StatusMessage { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The webhook property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookRepresentation? Webhook { get; set; }
#nullable restore
#else
        public global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookRepresentation Webhook { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookSendRepresentation"/> and sets the default values.
        /// </summary>
        public WebhookSendRepresentation()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookSendRepresentation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookSendRepresentation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookSendRepresentation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "event_id", n => { EventId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "keycloak_event_id", n => { KeycloakEventId = n.GetStringValue(); } },
                { "keycloak_event_type", n => { KeycloakEventType = n.GetStringValue(); } },
                { "payload", n => { Payload = n.GetStringValue(); } },
                { "retried", n => { Retried = n.GetIntValue(); } },
                { "sent_at", n => { SentAt = n.GetStringValue(); } },
                { "status", n => { Status = n.GetIntValue(); } },
                { "status_message", n => { StatusMessage = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "webhook", n => { Webhook = n.GetObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookRepresentation>(global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookRepresentation.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("event_id", EventId);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("keycloak_event_id", KeycloakEventId);
            writer.WriteStringValue("keycloak_event_type", KeycloakEventType);
            writer.WriteStringValue("payload", Payload);
            writer.WriteIntValue("retried", Retried);
            writer.WriteStringValue("sent_at", SentAt);
            writer.WriteIntValue("status", Status);
            writer.WriteStringValue("status_message", StatusMessage);
            writer.WriteStringValue("type", Type);
            writer.WriteObjectValue<global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.Models.WebhookRepresentation>("webhook", Webhook);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
