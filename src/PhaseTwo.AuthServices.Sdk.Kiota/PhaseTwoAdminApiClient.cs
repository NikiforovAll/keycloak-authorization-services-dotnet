// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using PhaseTwo.AuthServices.Sdk.Kiota.Admin.Admin;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace PhaseTwo.AuthServices.Sdk.Kiota.Admin
{
    using Microsoft.Extensions.Options;

    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PhaseTwoAdminApiClient : BaseRequestBuilder
    {
        private PhaseTwoAdminClientOptions _options;
        /// <summary>The admin property</summary>
        public PhaseTwo.AuthServices.Sdk.Kiota.Admin.Admin.AdminRequestBuilder Admin(string realm = null)
        {
            realm ??= _options.Realm;
            PathParameters.TryAdd("realm", realm);
            return new PhaseTwo.AuthServices.Sdk.Kiota.Admin.Admin.AdminRequestBuilder(PathParameters, RequestAdapter);
        }

        /// <summary>
        /// Instantiates a new <see cref="global::PhaseTwo.AuthServices.Sdk.Kiota.Admin.PhaseTwoAdminApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PhaseTwoAdminApiClient(IRequestAdapter requestAdapter, IOptions<PhaseTwoAdminClientOptions> options) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            _options = options.Value;
            const string RealmsSegment = "/realms";
            var baseUrl = RequestAdapter.BaseUrl?.TrimEnd('/');
            baseUrl = baseUrl is not null && !baseUrl.EndsWith(RealmsSegment, StringComparison.OrdinalIgnoreCase)
                ? $"{baseUrl}{RealmsSegment}"
                : baseUrl;
            RequestAdapter.BaseUrl = baseUrl;
            PathParameters.TryAdd("baseurl", baseUrl);

        }
    }
}
#pragma warning restore CS0618
